node {
  name: "load_images/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "facades/val\\1.jpg"
        string_val: "facades/val\\2.jpg"
        string_val: "facades/val\\3.jpg"
        string_val: "facades/val\\4.jpg"
        string_val: "facades/val\\5.jpg"
        string_val: "facades/val\\6.jpg"
        string_val: "facades/val\\7.jpg"
        string_val: "facades/val\\8.jpg"
        string_val: "facades/val\\9.jpg"
        string_val: "facades/val\\10.jpg"
        string_val: "facades/val\\11.jpg"
        string_val: "facades/val\\12.jpg"
        string_val: "facades/val\\13.jpg"
        string_val: "facades/val\\14.jpg"
        string_val: "facades/val\\15.jpg"
        string_val: "facades/val\\16.jpg"
        string_val: "facades/val\\17.jpg"
        string_val: "facades/val\\18.jpg"
        string_val: "facades/val\\19.jpg"
        string_val: "facades/val\\20.jpg"
        string_val: "facades/val\\21.jpg"
        string_val: "facades/val\\22.jpg"
        string_val: "facades/val\\23.jpg"
        string_val: "facades/val\\24.jpg"
        string_val: "facades/val\\25.jpg"
        string_val: "facades/val\\26.jpg"
        string_val: "facades/val\\27.jpg"
        string_val: "facades/val\\28.jpg"
        string_val: "facades/val\\29.jpg"
        string_val: "facades/val\\30.jpg"
        string_val: "facades/val\\31.jpg"
        string_val: "facades/val\\32.jpg"
        string_val: "facades/val\\33.jpg"
        string_val: "facades/val\\34.jpg"
        string_val: "facades/val\\35.jpg"
        string_val: "facades/val\\36.jpg"
        string_val: "facades/val\\37.jpg"
        string_val: "facades/val\\38.jpg"
        string_val: "facades/val\\39.jpg"
        string_val: "facades/val\\40.jpg"
        string_val: "facades/val\\41.jpg"
        string_val: "facades/val\\42.jpg"
        string_val: "facades/val\\43.jpg"
        string_val: "facades/val\\44.jpg"
        string_val: "facades/val\\45.jpg"
        string_val: "facades/val\\46.jpg"
        string_val: "facades/val\\47.jpg"
        string_val: "facades/val\\48.jpg"
        string_val: "facades/val\\49.jpg"
        string_val: "facades/val\\50.jpg"
        string_val: "facades/val\\51.jpg"
        string_val: "facades/val\\52.jpg"
        string_val: "facades/val\\53.jpg"
        string_val: "facades/val\\54.jpg"
        string_val: "facades/val\\55.jpg"
        string_val: "facades/val\\56.jpg"
        string_val: "facades/val\\57.jpg"
        string_val: "facades/val\\58.jpg"
        string_val: "facades/val\\59.jpg"
        string_val: "facades/val\\60.jpg"
        string_val: "facades/val\\61.jpg"
        string_val: "facades/val\\62.jpg"
        string_val: "facades/val\\63.jpg"
        string_val: "facades/val\\64.jpg"
        string_val: "facades/val\\65.jpg"
        string_val: "facades/val\\66.jpg"
        string_val: "facades/val\\67.jpg"
        string_val: "facades/val\\68.jpg"
        string_val: "facades/val\\69.jpg"
        string_val: "facades/val\\70.jpg"
        string_val: "facades/val\\71.jpg"
        string_val: "facades/val\\72.jpg"
        string_val: "facades/val\\73.jpg"
        string_val: "facades/val\\74.jpg"
        string_val: "facades/val\\75.jpg"
        string_val: "facades/val\\76.jpg"
        string_val: "facades/val\\77.jpg"
        string_val: "facades/val\\78.jpg"
        string_val: "facades/val\\79.jpg"
        string_val: "facades/val\\80.jpg"
        string_val: "facades/val\\81.jpg"
        string_val: "facades/val\\82.jpg"
        string_val: "facades/val\\83.jpg"
        string_val: "facades/val\\84.jpg"
        string_val: "facades/val\\85.jpg"
        string_val: "facades/val\\86.jpg"
        string_val: "facades/val\\87.jpg"
        string_val: "facades/val\\88.jpg"
        string_val: "facades/val\\89.jpg"
        string_val: "facades/val\\90.jpg"
        string_val: "facades/val\\91.jpg"
        string_val: "facades/val\\92.jpg"
        string_val: "facades/val\\93.jpg"
        string_val: "facades/val\\94.jpg"
        string_val: "facades/val\\95.jpg"
        string_val: "facades/val\\96.jpg"
        string_val: "facades/val\\97.jpg"
        string_val: "facades/val\\98.jpg"
        string_val: "facades/val\\99.jpg"
        string_val: "facades/val\\100.jpg"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "load_images/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/input_producer/Greater"
  op: "Greater"
  input: "load_images/input_producer/Size"
  input: "load_images/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Assert"
  op: "Assert"
  input: "load_images/input_producer/Greater"
  input: "load_images/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "load_images/input_producer/Identity"
  op: "Identity"
  input: "load_images/input_producer/Const"
  input: "^load_images/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "load_images/input_producer"
  input: "load_images/input_producer/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "load_images/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "load_images/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "load_images/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/ToFloat"
  op: "Cast"
  input: "load_images/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "load_images/input_producer/mul"
  op: "Mul"
  input: "load_images/input_producer/ToFloat"
  input: "load_images/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "load_images/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "load_images/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "load_images/input_producer/fraction_of_32_full/tags"
  input: "load_images/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/WholeFileReaderV2"
  op: "WholeFileReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "load_images/ReaderReadV2"
  op: "ReaderReadV2"
  input: "load_images/WholeFileReaderV2"
  input: "load_images/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/DecodeJpeg"
  op: "DecodeJpeg"
  input: "load_images/ReaderReadV2:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 0
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "load_images/convert_image/Cast"
  op: "Cast"
  input: "load_images/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921569
      }
    }
  }
}
node {
  name: "load_images/convert_image"
  op: "Mul"
  input: "load_images/convert_image/Cast"
  input: "load_images/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/Shape"
  op: "Shape"
  input: "load_images/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "load_images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/strided_slice"
  op: "StridedSlice"
  input: "load_images/Shape"
  input: "load_images/strided_slice/stack"
  input: "load_images/strided_slice/stack_1"
  input: "load_images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "load_images/assert_equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Equal"
  op: "Equal"
  input: "load_images/strided_slice"
  input: "load_images/assert_equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/assert_equal/All"
  op: "All"
  input: "load_images/assert_equal/Equal"
  input: "load_images/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image does not have 3 channels"
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (load_images/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (load_images/assert_equal/y:0) = "
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image does not have 3 channels"
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (load_images/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (load_images/assert_equal/y:0) = "
      }
    }
  }
}
node {
  name: "load_images/assert_equal/Assert/Assert"
  op: "Assert"
  input: "load_images/assert_equal/All"
  input: "load_images/assert_equal/Assert/Assert/data_0"
  input: "load_images/assert_equal/Assert/Assert/data_1"
  input: "load_images/assert_equal/Assert/Assert/data_2"
  input: "load_images/strided_slice"
  input: "load_images/assert_equal/Assert/Assert/data_4"
  input: "load_images/assert_equal/y"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "load_images/Identity"
  op: "Identity"
  input: "load_images/convert_image"
  input: "^load_images/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/Shape_1"
  op: "Shape"
  input: "load_images/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "load_images/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "load_images/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/strided_slice_1"
  op: "StridedSlice"
  input: "load_images/Shape_1"
  input: "load_images/strided_slice_1/stack"
  input: "load_images/strided_slice_1/stack_1"
  input: "load_images/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "load_images/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "load_images/floordiv"
  op: "FloorDiv"
  input: "load_images/strided_slice_1"
  input: "load_images/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice_2/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/strided_slice_2/stack_1/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/strided_slice_2/stack_1"
  op: "Pack"
  input: "load_images/strided_slice_2/stack_1/0"
  input: "load_images/floordiv"
  input: "load_images/strided_slice_2/stack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice_2"
  op: "StridedSlice"
  input: "load_images/Identity"
  input: "load_images/strided_slice_2/stack"
  input: "load_images/strided_slice_2/stack_1"
  input: "load_images/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/preprocess/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "load_images/preprocess/mul"
  op: "Mul"
  input: "load_images/strided_slice_2"
  input: "load_images/preprocess/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/preprocess/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/preprocess/sub"
  op: "Sub"
  input: "load_images/preprocess/mul"
  input: "load_images/preprocess/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/floordiv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "load_images/floordiv_1"
  op: "FloorDiv"
  input: "load_images/strided_slice_1"
  input: "load_images/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/strided_slice_3/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/strided_slice_3/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/strided_slice_3/stack"
  op: "Pack"
  input: "load_images/strided_slice_3/stack/0"
  input: "load_images/floordiv_1"
  input: "load_images/strided_slice_3/stack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice_3"
  op: "StridedSlice"
  input: "load_images/Identity"
  input: "load_images/strided_slice_3/stack"
  input: "load_images/strided_slice_3/stack_1"
  input: "load_images/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/preprocess_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "load_images/preprocess_1/mul"
  op: "Mul"
  input: "load_images/strided_slice_3"
  input: "load_images/preprocess_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/preprocess_1/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/preprocess_1/sub"
  op: "Sub"
  input: "load_images/preprocess_1/mul"
  input: "load_images/preprocess_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_images/resize_images/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_images/resize_images/ExpandDims"
  op: "ExpandDims"
  input: "load_images/preprocess_1/sub"
  input: "input_images/resize_images/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_images/resize_images/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "input_images/resize_images/ResizeArea"
  op: "ResizeArea"
  input: "input_images/resize_images/ExpandDims"
  input: "input_images/resize_images/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "input_images/resize_images/Squeeze"
  op: "Squeeze"
  input: "input_images/resize_images/ResizeArea"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "input_images/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "input_images/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_images/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "input_images/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "input_images/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1225669621
    }
  }
}
node {
  name: "input_images/random_uniform/sub"
  op: "Sub"
  input: "input_images/random_uniform/max"
  input: "input_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_images/random_uniform/mul"
  op: "Mul"
  input: "input_images/random_uniform/RandomUniform"
  input: "input_images/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "input_images/random_uniform"
  op: "Add"
  input: "input_images/random_uniform/mul"
  input: "input_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "input_images/Floor"
  op: "Floor"
  input: "input_images/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "input_images/Cast"
  op: "Cast"
  input: "input_images/Floor"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "target_images/resize_images/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "target_images/resize_images/ExpandDims"
  op: "ExpandDims"
  input: "load_images/preprocess/sub"
  input: "target_images/resize_images/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "target_images/resize_images/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "target_images/resize_images/ResizeArea"
  op: "ResizeArea"
  input: "target_images/resize_images/ExpandDims"
  input: "target_images/resize_images/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "target_images/resize_images/Squeeze"
  op: "Squeeze"
  input: "target_images/resize_images/ResizeArea"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "target_images/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "target_images/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_images/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "target_images/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_images/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1225669621
    }
  }
}
node {
  name: "target_images/random_uniform/sub"
  op: "Sub"
  input: "target_images/random_uniform/max"
  input: "target_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "target_images/random_uniform/mul"
  op: "Mul"
  input: "target_images/random_uniform/RandomUniform"
  input: "target_images/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "target_images/random_uniform"
  op: "Add"
  input: "target_images/random_uniform/mul"
  input: "target_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "target_images/Floor"
  op: "Floor"
  input: "target_images/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "target_images/Cast"
  op: "Cast"
  input: "target_images/Floor"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "load_images/ReaderReadV2"
  input: "input_images/resize_images/Squeeze"
  input: "target_images/resize_images/Squeeze"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_32_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_32_full/tags"
  input: "batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 116
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/Pad"
  op: "Pad"
  input: "batch:1"
  input: "generator/encoder_1/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_1/conv/Pad"
  input: "generator/encoder_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_2/lrelu/mul/x"
  input: "generator/encoder_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_2/lrelu/mul_1/x"
  input: "generator/encoder_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/lrelu/add"
  op: "Add"
  input: "generator/encoder_2/lrelu/mul"
  input: "generator/encoder_2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 135
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/Pad"
  op: "Pad"
  input: "generator/encoder_2/lrelu/add"
  input: "generator/encoder_2/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_2/conv/Pad"
  input: "generator/encoder_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 152
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_2/batchnorm/Identity"
  input: "generator/encoder_2/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_2/batchnorm/Identity"
  input: "generator/encoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_2/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_2/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_2/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_2/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/Identity"
  input: "generator/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/moments/Squeeze"
  input: "generator/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_2/batchnorm/offset/read"
  input: "generator/encoder_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_2/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_3/lrelu/mul/x"
  input: "generator/encoder_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_3/lrelu/mul_1/x"
  input: "generator/encoder_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/lrelu/add"
  op: "Add"
  input: "generator/encoder_3/lrelu/mul"
  input: "generator/encoder_3/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 184
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_3/conv/filter"
  input: "generator/encoder_3/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_3/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/Pad"
  op: "Pad"
  input: "generator/encoder_3/lrelu/add"
  input: "generator/encoder_3/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_3/conv/Pad"
  input: "generator/encoder_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 201
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_3/batchnorm/Identity"
  input: "generator/encoder_3/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_3/batchnorm/Identity"
  input: "generator/encoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_3/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_3/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_3/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_3/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/Identity"
  input: "generator/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/moments/Squeeze"
  input: "generator/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_3/batchnorm/offset/read"
  input: "generator/encoder_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_3/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_4/lrelu/mul/x"
  input: "generator/encoder_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_4/lrelu/mul_1/x"
  input: "generator/encoder_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/lrelu/add"
  op: "Add"
  input: "generator/encoder_4/lrelu/mul"
  input: "generator/encoder_4/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 233
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_4/conv/filter"
  input: "generator/encoder_4/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_4/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/Pad"
  op: "Pad"
  input: "generator/encoder_4/lrelu/add"
  input: "generator/encoder_4/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_4/conv/Pad"
  input: "generator/encoder_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_4/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 250
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_4/batchnorm/Identity"
  input: "generator/encoder_4/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_4/batchnorm/Identity"
  input: "generator/encoder_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_4/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_4/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_4/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_4/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/Identity"
  input: "generator/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/moments/Squeeze"
  input: "generator/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_4/batchnorm/offset/read"
  input: "generator/encoder_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_4/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_5/lrelu/mul/x"
  input: "generator/encoder_5/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_5/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_5/lrelu/mul_1/x"
  input: "generator/encoder_5/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/lrelu/add"
  op: "Add"
  input: "generator/encoder_5/lrelu/mul"
  input: "generator/encoder_5/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 282
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_5/conv/filter"
  input: "generator/encoder_5/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_5/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/Pad"
  op: "Pad"
  input: "generator/encoder_5/lrelu/add"
  input: "generator/encoder_5/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_5/conv/Pad"
  input: "generator/encoder_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_5/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 299
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_5/batchnorm/Identity"
  input: "generator/encoder_5/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_5/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_5/batchnorm/Identity"
  input: "generator/encoder_5/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_5/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_5/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_5/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_5/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_5/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_5/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_5/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/Identity"
  input: "generator/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/moments/Squeeze"
  input: "generator/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_5/batchnorm/offset/read"
  input: "generator/encoder_5/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_5/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_5/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_6/lrelu/mul/x"
  input: "generator/encoder_6/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_6/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_6/lrelu/mul_1/x"
  input: "generator/encoder_6/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/lrelu/add"
  op: "Add"
  input: "generator/encoder_6/lrelu/mul"
  input: "generator/encoder_6/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 331
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_6/conv/filter"
  input: "generator/encoder_6/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_6/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/Pad"
  op: "Pad"
  input: "generator/encoder_6/lrelu/add"
  input: "generator/encoder_6/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_6/conv/Pad"
  input: "generator/encoder_6/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_6/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 348
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_6/batchnorm/Identity"
  input: "generator/encoder_6/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_6/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_6/batchnorm/Identity"
  input: "generator/encoder_6/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_6/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_6/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_6/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_6/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_6/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_6/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_6/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/Identity"
  input: "generator/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/moments/Squeeze"
  input: "generator/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_6/batchnorm/offset/read"
  input: "generator/encoder_6/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_6/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_6/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_7/lrelu/mul/x"
  input: "generator/encoder_7/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_7/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_7/lrelu/mul_1/x"
  input: "generator/encoder_7/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/lrelu/add"
  op: "Add"
  input: "generator/encoder_7/lrelu/mul"
  input: "generator/encoder_7/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 380
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_7/conv/filter"
  input: "generator/encoder_7/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_7/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/Pad"
  op: "Pad"
  input: "generator/encoder_7/lrelu/add"
  input: "generator/encoder_7/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_7/conv/Pad"
  input: "generator/encoder_7/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_7/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset"
  input: "generator/encoder_7/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 397
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale"
  input: "generator/encoder_7/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_7/batchnorm/Identity"
  input: "generator/encoder_7/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_7/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_7/batchnorm/Identity"
  input: "generator/encoder_7/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_7/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_7/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_7/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_7/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_7/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_7/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_7/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_7/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_7/batchnorm/Identity"
  input: "generator/encoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_7/batchnorm/moments/Squeeze"
  input: "generator/encoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_7/batchnorm/offset/read"
  input: "generator/encoder_7/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_7/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_7/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/Identity"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/mul"
  op: "Mul"
  input: "generator/encoder_8/lrelu/mul/x"
  input: "generator/encoder_8/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/Abs"
  op: "Abs"
  input: "generator/encoder_8/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/mul_1"
  op: "Mul"
  input: "generator/encoder_8/lrelu/mul_1/x"
  input: "generator/encoder_8/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/lrelu/add"
  op: "Add"
  input: "generator/encoder_8/lrelu/mul"
  input: "generator/encoder_8/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 429
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal/mul"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_8/conv/filter"
  input: "generator/encoder_8/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_8/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/Pad"
  op: "Pad"
  input: "generator/encoder_8/lrelu/add"
  input: "generator/encoder_8/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder_8/conv/Pad"
  input: "generator/encoder_8/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder_8/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset"
  input: "generator/encoder_8/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 446
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale"
  input: "generator/encoder_8/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/encoder_8/batchnorm/Identity"
  input: "generator/encoder_8/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder_8/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder_8/batchnorm/Identity"
  input: "generator/encoder_8/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/encoder_8/batchnorm/moments/SquaredDifference"
  input: "generator/encoder_8/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/encoder_8/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/encoder_8/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder_8/batchnorm/moments/Squeeze_1"
  input: "generator/encoder_8/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder_8/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder_8/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder_8/batchnorm/Identity"
  input: "generator/encoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder_8/batchnorm/moments/Squeeze"
  input: "generator/encoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_8/batchnorm/offset/read"
  input: "generator/encoder_8/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder_8/batchnorm/batchnorm/mul_1"
  input: "generator/encoder_8/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/Relu"
  op: "Relu"
  input: "generator/encoder_8/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 472
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter"
  input: "generator/decoder_8/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_8/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_8/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_8/deconv/filter/read"
  input: "generator/decoder_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_8/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset"
  input: "generator/decoder_8/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 488
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale"
  input: "generator/decoder_8/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_8/batchnorm/Identity"
  input: "generator/decoder_8/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_8/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_8/batchnorm/Identity"
  input: "generator/decoder_8/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_8/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_8/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_8/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_8/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_8/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_8/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_8/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_8/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_8/batchnorm/Identity"
  input: "generator/decoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_8/batchnorm/moments/Squeeze"
  input: "generator/decoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_8/batchnorm/offset/read"
  input: "generator/decoder_8/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_8/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_8/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_8/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 514
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_8/dropout/random_uniform/max"
  input: "generator/decoder_8/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_8/dropout/random_uniform/RandomUniform"
  input: "generator/decoder_8/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/random_uniform"
  op: "Add"
  input: "generator/decoder_8/dropout/random_uniform/mul"
  input: "generator/decoder_8/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/add"
  op: "Add"
  input: "generator/decoder_8/dropout/keep_prob"
  input: "generator/decoder_8/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/Floor"
  op: "Floor"
  input: "generator/decoder_8/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/div"
  op: "RealDiv"
  input: "generator/decoder_8/batchnorm/batchnorm/add_1"
  input: "generator/decoder_8/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/dropout/mul"
  op: "Mul"
  input: "generator/decoder_8/dropout/div"
  input: "generator/decoder_8/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_7/concat"
  op: "ConcatV2"
  input: "generator/decoder_8/dropout/mul"
  input: "generator/encoder_7/batchnorm/batchnorm/add_1"
  input: "generator/decoder_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/Relu"
  op: "Relu"
  input: "generator/decoder_7/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 528
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter"
  input: "generator/decoder_7/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_7/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_7/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_7/deconv/filter/read"
  input: "generator/decoder_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_7/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset"
  input: "generator/decoder_7/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 544
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale"
  input: "generator/decoder_7/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_7/batchnorm/Identity"
  input: "generator/decoder_7/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_7/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_7/batchnorm/Identity"
  input: "generator/decoder_7/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_7/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_7/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_7/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_7/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_7/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_7/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_7/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_7/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_7/batchnorm/Identity"
  input: "generator/decoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_7/batchnorm/moments/Squeeze"
  input: "generator/decoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_7/batchnorm/offset/read"
  input: "generator/decoder_7/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_7/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_7/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_7/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 570
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_7/dropout/random_uniform/max"
  input: "generator/decoder_7/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_7/dropout/random_uniform/RandomUniform"
  input: "generator/decoder_7/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/random_uniform"
  op: "Add"
  input: "generator/decoder_7/dropout/random_uniform/mul"
  input: "generator/decoder_7/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/add"
  op: "Add"
  input: "generator/decoder_7/dropout/keep_prob"
  input: "generator/decoder_7/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/Floor"
  op: "Floor"
  input: "generator/decoder_7/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/div"
  op: "RealDiv"
  input: "generator/decoder_7/batchnorm/batchnorm/add_1"
  input: "generator/decoder_7/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/dropout/mul"
  op: "Mul"
  input: "generator/decoder_7/dropout/div"
  input: "generator/decoder_7/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_6/concat"
  op: "ConcatV2"
  input: "generator/decoder_7/dropout/mul"
  input: "generator/encoder_6/batchnorm/batchnorm/add_1"
  input: "generator/decoder_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/Relu"
  op: "Relu"
  input: "generator/decoder_6/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 584
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter"
  input: "generator/decoder_6/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_6/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_6/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_6/deconv/filter/read"
  input: "generator/decoder_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_6/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset"
  input: "generator/decoder_6/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 600
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale"
  input: "generator/decoder_6/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_6/batchnorm/Identity"
  input: "generator/decoder_6/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_6/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_6/batchnorm/Identity"
  input: "generator/decoder_6/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_6/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_6/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_6/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_6/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_6/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_6/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_6/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_6/batchnorm/Identity"
  input: "generator/decoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_6/batchnorm/moments/Squeeze"
  input: "generator/decoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_6/batchnorm/offset/read"
  input: "generator/decoder_6/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_6/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_6/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_6/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 626
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_6/dropout/random_uniform/max"
  input: "generator/decoder_6/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_6/dropout/random_uniform/RandomUniform"
  input: "generator/decoder_6/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/random_uniform"
  op: "Add"
  input: "generator/decoder_6/dropout/random_uniform/mul"
  input: "generator/decoder_6/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/add"
  op: "Add"
  input: "generator/decoder_6/dropout/keep_prob"
  input: "generator/decoder_6/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/Floor"
  op: "Floor"
  input: "generator/decoder_6/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/div"
  op: "RealDiv"
  input: "generator/decoder_6/batchnorm/batchnorm/add_1"
  input: "generator/decoder_6/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/dropout/mul"
  op: "Mul"
  input: "generator/decoder_6/dropout/div"
  input: "generator/decoder_6/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_5/concat"
  op: "ConcatV2"
  input: "generator/decoder_6/dropout/mul"
  input: "generator/encoder_5/batchnorm/batchnorm/add_1"
  input: "generator/decoder_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/Relu"
  op: "Relu"
  input: "generator/decoder_5/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 640
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter"
  input: "generator/decoder_5/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_5/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_5/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_5/deconv/filter/read"
  input: "generator/decoder_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_5/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset"
  input: "generator/decoder_5/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 656
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale"
  input: "generator/decoder_5/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_5/batchnorm/Identity"
  input: "generator/decoder_5/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_5/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_5/batchnorm/Identity"
  input: "generator/decoder_5/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_5/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_5/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_5/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_5/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_5/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_5/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_5/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_5/batchnorm/Identity"
  input: "generator/decoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_5/batchnorm/moments/Squeeze"
  input: "generator/decoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_5/batchnorm/offset/read"
  input: "generator/decoder_5/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_5/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_5/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_4/concat"
  op: "ConcatV2"
  input: "generator/decoder_5/batchnorm/batchnorm/add_1"
  input: "generator/encoder_4/batchnorm/batchnorm/add_1"
  input: "generator/decoder_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/Relu"
  op: "Relu"
  input: "generator/decoder_4/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 684
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter"
  input: "generator/decoder_4/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_4/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_4/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_4/deconv/filter/read"
  input: "generator/decoder_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_4/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset"
  input: "generator/decoder_4/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 700
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale"
  input: "generator/decoder_4/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_4/batchnorm/Identity"
  input: "generator/decoder_4/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_4/batchnorm/Identity"
  input: "generator/decoder_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_4/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_4/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_4/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_4/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_4/batchnorm/Identity"
  input: "generator/decoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_4/batchnorm/moments/Squeeze"
  input: "generator/decoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_4/batchnorm/offset/read"
  input: "generator/decoder_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_4/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_3/concat"
  op: "ConcatV2"
  input: "generator/decoder_4/batchnorm/batchnorm/add_1"
  input: "generator/encoder_3/batchnorm/batchnorm/add_1"
  input: "generator/decoder_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/Relu"
  op: "Relu"
  input: "generator/decoder_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 728
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter"
  input: "generator/decoder_3/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_3/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_3/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_3/deconv/filter/read"
  input: "generator/decoder_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_3/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 744
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_3/batchnorm/Identity"
  input: "generator/decoder_3/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_3/batchnorm/Identity"
  input: "generator/decoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_3/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_3/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_3/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_3/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/Identity"
  input: "generator/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/moments/Squeeze"
  input: "generator/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_3/batchnorm/offset/read"
  input: "generator/decoder_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_3/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_2/concat"
  op: "ConcatV2"
  input: "generator/decoder_3/batchnorm/batchnorm/add_1"
  input: "generator/encoder_2/batchnorm/batchnorm/add_1"
  input: "generator/decoder_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/Relu"
  op: "Relu"
  input: "generator/decoder_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 772
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter"
  input: "generator/decoder_2/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_2/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_2/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_2/deconv/filter/read"
  input: "generator/decoder_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder_2/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 788
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/mean"
  op: "Mean"
  input: "generator/decoder_2/batchnorm/Identity"
  input: "generator/decoder_2/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder_2/batchnorm/Identity"
  input: "generator/decoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/variance"
  op: "Mean"
  input: "generator/decoder_2/batchnorm/moments/SquaredDifference"
  input: "generator/decoder_2/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "generator/decoder_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "generator/decoder_2/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder_2/batchnorm/moments/Squeeze_1"
  input: "generator/decoder_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/Identity"
  input: "generator/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/moments/Squeeze"
  input: "generator/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_2/batchnorm/offset/read"
  input: "generator/decoder_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder_2/batchnorm/batchnorm/mul_1"
  input: "generator/decoder_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/decoder_1/concat"
  op: "ConcatV2"
  input: "generator/decoder_2/batchnorm/batchnorm/add_1"
  input: "generator/encoder_1/conv/Conv2D"
  input: "generator/decoder_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/Relu"
  op: "Relu"
  input: "generator/decoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 816
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal/mul"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter"
  input: "generator/decoder_1/deconv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/read"
  op: "Identity"
  input: "generator/decoder_1/deconv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/conv2d_transpose/output_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "generator/decoder_1/deconv/conv2d_transpose/output_shape"
  input: "generator/decoder_1/deconv/filter/read"
  input: "generator/decoder_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/Tanh"
  op: "Tanh"
  input: "generator/decoder_1/deconv/conv2d_transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/concat"
  op: "ConcatV2"
  input: "batch:1"
  input: "batch:2"
  input: "real_discriminator/discriminator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 830
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal/mul"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/conv/Pad"
  op: "Pad"
  input: "real_discriminator/discriminator/concat"
  input: "real_discriminator/discriminator/layer_1/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 849
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal/mul"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/conv/Pad"
  op: "Pad"
  input: "real_discriminator/discriminator/layer_1/lrelu/add"
  input: "real_discriminator/discriminator/layer_2/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 866
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/variance"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_2/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 898
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal/mul"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/conv/Pad"
  op: "Pad"
  input: "real_discriminator/discriminator/layer_2/lrelu/add"
  input: "real_discriminator/discriminator/layer_3/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 915
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/variance"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_3/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 947
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal/mul"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/conv/Pad"
  op: "Pad"
  input: "real_discriminator/discriminator/layer_3/lrelu/add"
  input: "real_discriminator/discriminator/layer_4/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_4/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 964
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/variance"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_4/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 2071349299
    }
  }
  attr {
    key: "seed2"
    value {
      i: 996
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal/mul"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/conv/Pad"
  op: "Pad"
  input: "real_discriminator/discriminator/layer_4/lrelu/add"
  input: "real_discriminator/discriminator/layer_5/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/Sigmoid"
  op: "Sigmoid"
  input: "real_discriminator/discriminator/layer_5/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/concat"
  op: "ConcatV2"
  input: "batch:1"
  input: "generator/decoder_1/Tanh"
  input: "fake_discriminator/discriminator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/conv/Pad"
  op: "Pad"
  input: "fake_discriminator/discriminator/concat"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/conv/Pad"
  op: "Pad"
  input: "fake_discriminator/discriminator/layer_1/lrelu/add"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_2/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/conv/Pad"
  op: "Pad"
  input: "fake_discriminator/discriminator/layer_2/lrelu/add"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_3/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/conv/Pad"
  op: "Pad"
  input: "fake_discriminator/discriminator/layer_3/lrelu/add"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_4/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-05
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_4/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/conv/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/conv/Pad"
  op: "Pad"
  input: "fake_discriminator/discriminator/layer_4/lrelu/add"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/Sigmoid"
  op: "Sigmoid"
  input: "fake_discriminator/discriminator/layer_5/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-12
      }
    }
  }
}
node {
  name: "discriminator_loss/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Log"
  op: "Log"
  input: "discriminator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_loss/sub"
  op: "Sub"
  input: "discriminator_loss/sub/x"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-12
      }
    }
  }
}
node {
  name: "discriminator_loss/add_1"
  op: "Add"
  input: "discriminator_loss/sub"
  input: "discriminator_loss/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Log_1"
  op: "Log"
  input: "discriminator_loss/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add_2"
  op: "Add"
  input: "discriminator_loss/Log"
  input: "discriminator_loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Neg"
  op: "Neg"
  input: "discriminator_loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_loss/Mean"
  op: "Mean"
  input: "discriminator_loss/Neg"
  input: "discriminator_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-12
      }
    }
  }
}
node {
  name: "generator_loss/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "generator_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Log"
  op: "Log"
  input: "generator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Neg"
  op: "Neg"
  input: "generator_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_loss/Mean"
  op: "Mean"
  input: "generator_loss/Neg"
  input: "generator_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/sub"
  op: "Sub"
  input: "batch:2"
  input: "generator/decoder_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Abs"
  op: "Abs"
  input: "generator_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_loss/Mean_1"
  op: "Mean"
  input: "generator_loss/Abs"
  input: "generator_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_loss/mul"
  op: "Mul"
  input: "generator_loss/Mean"
  input: "generator_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "generator_loss/mul_1"
  op: "Mul"
  input: "generator_loss/Mean_1"
  input: "generator_loss/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/add_1"
  op: "Add"
  input: "generator_loss/mul"
  input: "generator_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/Shape"
  input: "discriminator_train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/Fill"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 900.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_loss/add"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_loss/add_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "real_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Neg"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "real_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_5/conv/filter/read"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  op: "Slice"
  input: "real_discriminator/discriminator/layer_5/conv/Pad/paddings"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_5/conv/filter/read"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad/paddings"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_1"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_2"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_2"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_2"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_3"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_3"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_3"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_4"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_5"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_5"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_5"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_6"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_7"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "real_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_4/conv/filter/read"
  input: "discriminator_train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_8"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  op: "Slice"
  input: "real_discriminator/discriminator/layer_4/conv/Pad/paddings"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_4/conv/filter/read"
  input: "discriminator_train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad/paddings"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_9"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_10"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_10"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_10"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_11"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_11"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_11"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_12"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_12"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_12"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_13"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_14"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_14"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_14"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_15"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_16"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "real_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_3/conv/filter/read"
  input: "discriminator_train/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_17"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  op: "Slice"
  input: "real_discriminator/discriminator/layer_3/conv/Pad/paddings"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_3/conv/filter/read"
  input: "discriminator_train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad/paddings"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_18"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_19"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_19"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_19"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_20"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_20"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_20"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_21"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_21"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_21"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_22"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_23"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_23"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_23"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_24"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_25"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "real_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_2/conv/filter/read"
  input: "discriminator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_26"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  op: "Slice"
  input: "real_discriminator/discriminator/layer_2/conv/Pad/paddings"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_2/conv/filter/read"
  input: "discriminator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  op: "Pack"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad/paddings"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_27"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_28"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "real_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_1/conv/filter/read"
  input: "discriminator_train/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_29"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_1/conv/filter/read"
  input: "discriminator_train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN:1"
  input: "discriminator_train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_30"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_train/beta1_power/Assign"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/beta1_power/read"
  op: "Identity"
  input: "discriminator_train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_train/beta2_power/Assign"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "discriminator_train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/beta2_power/read"
  op: "Identity"
  input: "discriminator_train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator/layer_1/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator/layer_1/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator/layer_2/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator/layer_2/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator/layer_2/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator/layer_2/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator/layer_3/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator/layer_3/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator/layer_3/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator/layer_3/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator/layer_4/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator/layer_4/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator/layer_4/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator/layer_4/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator/layer_5/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator/layer_5/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0002
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/mul"
  op: "Mul"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/Adam/beta1"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/Assign"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/Adam/mul_1"
  op: "Mul"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/beta2"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/Assign_1"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "discriminator_train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/Adam"
  op: "NoOp"
  input: "^discriminator_train/Adam/Assign"
  input: "^discriminator_train/Adam/Assign_1"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
}
node {
  name: "generator_train/gradients/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/grad_ys_0"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/Fill"
  op: "Fill"
  input: "generator_train/gradients/Shape"
  input: "generator_train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/Fill"
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Fill"
  input: "^generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Fill"
  input: "^generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency"
  input: "generator_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency"
  input: "generator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/mul_grad/Mul"
  input: "^generator_train/gradients/generator_loss/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_grad/Mul"
  input: "^generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  input: "generator_loss/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  input: "generator_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/Mul"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Mul"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Mul_1"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_loss/Mean_grad/Reshape"
  input: "generator_train/gradients/generator_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Const_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 900.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator_loss/Mean_grad/Tile"
  input: "generator_train/gradients/generator_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/Reshape"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/Const_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 196608.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/Tile"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Neg_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Abs_grad/Sign"
  op: "Sign"
  input: "generator_loss/sub"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/Mean_1_grad/truediv"
  input: "generator_train/gradients/generator_loss/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "generator_loss/add"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/Neg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Log_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/Neg_grad/Neg"
  input: "generator_train/gradients/generator_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_loss/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/Abs_grad/mul"
  input: "^generator_train/gradients/generator_loss/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/Abs_grad/mul"
  input: "^generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/sub_grad/Neg"
  input: "^generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\036\000\000\000\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/add_grad/Shape"
  input: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/Log_grad/mul"
  input: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_grad/Sum"
  input: "generator_train/gradients/generator_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/Log_grad/mul"
  input: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad"
  input: "discriminator/layer_5/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_5/conv/filter/read"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 33
          }
          dim {
            size: 33
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Rank"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_5/conv/Pad/paddings"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_1"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_1"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\037\000\000\000\037\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 961.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_2"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad"
  input: "discriminator/layer_4/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_4/conv/filter/read"
  input: "generator_train/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Rank"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_4/conv/Pad/paddings"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_3"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_3"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_3"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_4"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_4"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_4"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_5"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad"
  input: "discriminator/layer_3/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_3/conv/filter/read"
  input: "generator_train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Rank"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_3/conv/Pad/paddings"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_6"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_6"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_6"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_7"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_7"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_7"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_8"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad"
  input: "discriminator/layer_2/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_2/conv/filter/read"
  input: "generator_train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Rank"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_2/conv/Pad/paddings"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_9"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad"
  input: "discriminator/layer_1/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN"
  input: "discriminator/layer_1/conv/filter/read"
  input: "generator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Rank"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice"
  op: "Slice"
  input: "fake_discriminator/discriminator/layer_1/conv/Pad/paddings"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/mod"
  op: "FloorMod"
  input: "fake_discriminator/discriminator/concat/axis"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/ConcatOffset"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Pad_grad/Slice_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice"
  input: "^generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice"
  input: "^generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_10"
  op: "AddN"
  input: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "generator/decoder_1/Tanh"
  input: "generator_train/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/generator/decoder_1/Tanh_grad/TanhGrad"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/generator/decoder_1/Tanh_grad/TanhGrad"
  input: "generator/decoder_1/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_1/concat/axis"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_1/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_1/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_1/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_1/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_2/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_11"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_11"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_11"
  input: "generator/decoder_2/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_2/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_2/batchnorm/Identity"
  input: "generator/decoder_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_2/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_12"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_12"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_12"
  input: "generator/decoder_2/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_2/concat/axis"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_2/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_2/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_2/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_2/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_3/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_13"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_13"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_13"
  input: "generator/decoder_3/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_3/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_3/batchnorm/Identity"
  input: "generator/decoder_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_3/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_14"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_14"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_14"
  input: "generator/decoder_3/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_3/concat/axis"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_3/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_3/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_3/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_3/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_4/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_4/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_15"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_15"
  input: "generator/decoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_15"
  input: "generator/decoder_4/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_4/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_4/batchnorm/Identity"
  input: "generator/decoder_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_4/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_16"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_16"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_16"
  input: "generator/decoder_4/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_4/concat/axis"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_4/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_4/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_4/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_4/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_4/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_4/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_5/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_5/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_17"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_17"
  input: "generator/decoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_17"
  input: "generator/decoder_5/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_5/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_5/batchnorm/Identity"
  input: "generator/decoder_5/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_5/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_18"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_18"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_18"
  input: "generator/decoder_5/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_5/concat/axis"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_5/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_5/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_5/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_5/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_5/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_5/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/control_dependency"
  input: "generator/decoder_6/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/control_dependency"
  input: "generator/decoder_6/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/control_dependency"
  input: "generator/decoder_6/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Sum"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Neg"
  op: "Neg"
  input: "generator/decoder_6/batchnorm/batchnorm/add_1"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Neg"
  input: "generator/decoder_6/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv_1"
  input: "generator/decoder_6/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/dropout/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/mul"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_6/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_6/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_19"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_19"
  input: "generator/decoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_19"
  input: "generator/decoder_6/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_6/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_6/batchnorm/Identity"
  input: "generator/decoder_6/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_6/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_20"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_20"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_20"
  input: "generator/decoder_6/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_6/concat/axis"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_6/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_6/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_6/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_6/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_6/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_6/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/control_dependency"
  input: "generator/decoder_7/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/control_dependency"
  input: "generator/decoder_7/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/control_dependency"
  input: "generator/decoder_7/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Sum"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Neg"
  op: "Neg"
  input: "generator/decoder_7/batchnorm/batchnorm/add_1"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Neg"
  input: "generator/decoder_7/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv_1"
  input: "generator/decoder_7/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/dropout/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/mul"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_7/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_7/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_21"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_21"
  input: "generator/decoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_21"
  input: "generator/decoder_7/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_7/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_7/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_7/batchnorm/Identity"
  input: "generator/decoder_7/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_7/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_22"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_22"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_22"
  input: "generator/decoder_7/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/mod"
  op: "FloorMod"
  input: "generator/decoder_7/concat/axis"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/mod"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Shape"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/Slice"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_7/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/ConcatOffset"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/decoder_7/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/ConcatOffset:1"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_7/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_7/concat_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Slice"
  input: "^generator_train/gradients/generator/decoder_7/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/Slice_1"
  input: "^generator_train/gradients/generator/decoder_7/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/control_dependency"
  input: "generator/decoder_8/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/control_dependency"
  input: "generator/decoder_8/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/control_dependency"
  input: "generator/decoder_8/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Sum"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Neg"
  op: "Neg"
  input: "generator/decoder_8/batchnorm/batchnorm/add_1"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Neg"
  input: "generator/decoder_8/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv_1"
  input: "generator/decoder_8/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/dropout/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/mul"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/dropout/div_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/decoder_8/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder_8/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_23"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_23"
  input: "generator/decoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_23"
  input: "generator/decoder_8/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder_8/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/decoder_8/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder_8/batchnorm/Identity"
  input: "generator/decoder_8/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/decoder_8/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_24"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator_train/gradients/AddN_24"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Shape"
  input: "generator/decoder_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "generator_train/gradients/AddN_24"
  input: "generator/decoder_8/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2D"
  input: "^generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder_8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "generator/decoder_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder_8/Relu_grad/ReluGrad"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_8/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_8/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_8/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_25"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_25"
  input: "generator/encoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_25"
  input: "generator/encoder_8/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_8/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_8/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_8/batchnorm/Identity"
  input: "generator/encoder_8/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_8/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_26"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_8/conv/Pad"
  input: "generator/encoder_8/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_8/conv/filter/read"
  input: "generator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_8/conv/Pad"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_8/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_8/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_8/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_8/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_8/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_8/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_8/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_8/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_27"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_8/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_8/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_8/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_28"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_7/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_7/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_28"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_28"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_7/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_7/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_7/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_29"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_29"
  input: "generator/encoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_29"
  input: "generator/encoder_7/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_7/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_7/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_7/batchnorm/Identity"
  input: "generator/encoder_7/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\002\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_7/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_30"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_7/conv/Pad"
  input: "generator/encoder_7/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_7/conv/filter/read"
  input: "generator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_7/conv/Pad"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_7/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_7/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_7/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_7/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_7/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_7/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_7/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_7/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_31"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_7/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_7/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_7/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_32"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_6/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_31"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_6/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_32"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_32"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_6/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_33"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_33"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_33"
  input: "generator/encoder_6/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_6/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_6/batchnorm/Identity"
  input: "generator/encoder_6/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_6/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_34"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_6/conv/Pad"
  input: "generator/encoder_6/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_6/conv/filter/read"
  input: "generator_train/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_6/conv/Pad"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_6/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_6/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_6/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_6/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_6/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_6/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_6/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_6/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_35"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_6/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_6/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_6/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_36"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_5/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_35"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_5/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_36"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_36"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_5/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_37"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_37"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_37"
  input: "generator/encoder_5/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_5/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_5/batchnorm/Identity"
  input: "generator/encoder_5/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_5/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_38"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_5/conv/Pad"
  input: "generator/encoder_5/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_5/conv/filter/read"
  input: "generator_train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_5/conv/Pad"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_5/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_5/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_5/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_5/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_5/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_5/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_5/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_5/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_39"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_5/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_5/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_5/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_40"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_4/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_4/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_40"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_40"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_4/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_41"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_41"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_41"
  input: "generator/encoder_4/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_4/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_4/batchnorm/Identity"
  input: "generator/encoder_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_4/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 256.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_42"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_4/conv/Pad"
  input: "generator/encoder_4/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_4/conv/filter/read"
  input: "generator_train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_4/conv/Pad"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_4/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_4/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_4/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_4/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_43"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_44"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_3/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_43"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_44"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_44"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_3/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_45"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_45"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_45"
  input: "generator/encoder_3/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_3/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_3/batchnorm/Identity"
  input: "generator/encoder_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_3/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1024.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_46"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_3/conv/Pad"
  input: "generator/encoder_3/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_3/conv/filter/read"
  input: "generator_train/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_3/conv/Pad"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 66
          }
          dim {
            size: 66
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_3/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_3/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_3/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_3/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_47"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_48"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_2/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_47"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_48"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_48"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder_2/batchnorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_49"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_49"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/AddN_49"
  input: "generator/encoder_2/batchnorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/add"
  op: "Add"
  input: "generator/encoder_2/batchnorm/moments/variance/reduction_indices"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/add"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range/start"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Size"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/range"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/mod"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_1_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Tile"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder_2/batchnorm/Identity"
  input: "generator/encoder_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/add"
  op: "Add"
  input: "generator/encoder_2/batchnorm/moments/mean/reduction_indices"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/add"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range/start"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Size"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/range"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/mod"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/Squeeze_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4096.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Tile"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_50"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_2/conv/Pad"
  input: "generator/encoder_2/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_2/conv/filter/read"
  input: "generator_train/gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_2/conv/Pad"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 130
          }
          dim {
            size: 130
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/stack/1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/stack"
  op: "Pack"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Rank"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice/begin"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice"
  op: "Slice"
  input: "generator/encoder_2/conv/Pad/paddings"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice/begin"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
  op: "Slice"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Reshape"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/conv/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency"
  input: "generator/encoder_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Mul"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_2/lrelu/mul/x"
  input: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "generator/encoder_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Mul"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Mul_1"
  op: "Mul"
  input: "generator/encoder_2/lrelu/mul_1/x"
  input: "generator_train/gradients/generator/encoder_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Mul_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "generator/encoder_2/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_51"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_52"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder_1/concat_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/AddN_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "generator/encoder_1/conv/Pad"
  input: "generator/encoder_1/conv/filter/read"
  input: "^discriminator_train/Adam"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/ShapeN"
  input: "generator/encoder_1/conv/filter/read"
  input: "generator_train/gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder_1/conv/Pad"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/ShapeN:1"
  input: "generator_train/gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 258
          }
          dim {
            size: 258
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_train/beta1_power/Assign"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "generator_train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/beta1_power/read"
  op: "Identity"
  input: "generator_train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "generator_train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_train/beta2_power/Assign"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "generator_train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/beta2_power/read"
  op: "Identity"
  input: "generator_train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_1/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_1/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator/encoder_1/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator/encoder_1/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_2/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_2/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator/encoder_2/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator/encoder_2/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator/encoder_2/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator/encoder_2/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator/encoder_2/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator/encoder_2/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_3/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_3/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/conv/filter/Adam"
  input: "generator/encoder_3/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/conv/filter/Adam_1"
  input: "generator/encoder_3/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator/encoder_3/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator/encoder_3/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator/encoder_3/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator/encoder_3/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_4/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_4/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/conv/filter/Adam"
  input: "generator/encoder_4/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/conv/filter/Adam_1"
  input: "generator/encoder_4/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator/encoder_4/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator/encoder_4/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator/encoder_4/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator/encoder_4/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_5/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_5/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/conv/filter/Adam"
  input: "generator/encoder_5/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/conv/filter/Adam_1"
  input: "generator/encoder_5/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator/encoder_5/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator/encoder_5/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator/encoder_5/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator/encoder_5/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_6/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_6/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/conv/filter/Adam"
  input: "generator/encoder_6/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/conv/filter/Adam_1"
  input: "generator/encoder_6/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator/encoder_6/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator/encoder_6/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator/encoder_6/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator/encoder_6/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_7/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_7/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_7/conv/filter/Adam"
  input: "generator/encoder_7/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_7/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_7/conv/filter/Adam_1"
  input: "generator/encoder_7/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_7/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  input: "generator/encoder_7/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  input: "generator/encoder_7/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  input: "generator/encoder_7/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  input: "generator/encoder_7/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_8/conv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_8/conv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_8/conv/filter/Adam"
  input: "generator/encoder_8/conv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_8/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_8/conv/filter/Adam_1"
  input: "generator/encoder_8/conv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_8/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  input: "generator/encoder_8/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  input: "generator/encoder_8/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  input: "generator/encoder_8/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  input: "generator/encoder_8/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter/Adam"
  input: "generator/decoder_8/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_8/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  input: "generator/decoder_8/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  input: "generator/decoder_8/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  input: "generator/decoder_8/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  input: "generator/decoder_8/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  input: "generator/decoder_8/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter/Adam"
  input: "generator/decoder_7/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_7/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  input: "generator/decoder_7/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  input: "generator/decoder_7/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  input: "generator/decoder_7/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  input: "generator/decoder_7/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  input: "generator/decoder_7/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter/Adam"
  input: "generator/decoder_6/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_6/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  input: "generator/decoder_6/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  input: "generator/decoder_6/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  input: "generator/decoder_6/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  input: "generator/decoder_6/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  input: "generator/decoder_6/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter/Adam"
  input: "generator/decoder_5/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_5/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  input: "generator/decoder_5/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  input: "generator/decoder_5/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  input: "generator/decoder_5/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  input: "generator/decoder_5/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  input: "generator/decoder_5/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter/Adam"
  input: "generator/decoder_4/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_4/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  input: "generator/decoder_4/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  input: "generator/decoder_4/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  input: "generator/decoder_4/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  input: "generator/decoder_4/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  input: "generator/decoder_4/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter/Adam"
  input: "generator/decoder_3/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  input: "generator/decoder_3/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator/decoder_3/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator/decoder_3/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator/decoder_3/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator/decoder_3/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter/Adam"
  input: "generator/decoder_2/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  input: "generator/decoder_2/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator/decoder_2/batchnorm/offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator/decoder_2/batchnorm/offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator/decoder_2/batchnorm/scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator/decoder_2/batchnorm/scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter/Adam"
  input: "generator/decoder_1/deconv/filter/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_1/deconv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  input: "generator/decoder_1/deconv/filter/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/learning_rate"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0002
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "generator_train/Adam/epsilon"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/conv/filter"
  input: "generator/encoder_3/conv/filter/Adam"
  input: "generator/encoder_3/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/conv/filter"
  input: "generator/encoder_4/conv/filter/Adam"
  input: "generator/encoder_4/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/conv/filter"
  input: "generator/encoder_5/conv/filter/Adam"
  input: "generator/encoder_5/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/conv/filter"
  input: "generator/encoder_6/conv/filter/Adam"
  input: "generator/encoder_6/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_7/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_7/conv/filter"
  input: "generator/encoder_7/conv/filter/Adam"
  input: "generator/encoder_7/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_7/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_7/batchnorm/offset"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_7/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_7/batchnorm/scale"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_8/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_8/conv/filter"
  input: "generator/encoder_8/conv/filter/Adam"
  input: "generator/encoder_8/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_8/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_8/batchnorm/offset"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_8/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_8/batchnorm/scale"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_8/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_8/deconv/filter"
  input: "generator/decoder_8/deconv/filter/Adam"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_8/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_8/batchnorm/offset"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_8/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_8/batchnorm/scale"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_7/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_7/deconv/filter"
  input: "generator/decoder_7/deconv/filter/Adam"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_7/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_7/batchnorm/offset"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_7/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_7/batchnorm/scale"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_6/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_6/deconv/filter"
  input: "generator/decoder_6/deconv/filter/Adam"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_6/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_6/batchnorm/offset"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_6/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_6/batchnorm/scale"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_5/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_5/deconv/filter"
  input: "generator/decoder_5/deconv/filter/Adam"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_5/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_5/batchnorm/offset"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_5/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_5/batchnorm/scale"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_4/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_4/deconv/filter"
  input: "generator/decoder_4/deconv/filter/Adam"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_4/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_4/batchnorm/offset"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_4/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_4/batchnorm/scale"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/deconv/filter"
  input: "generator/decoder_3/deconv/filter/Adam"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/deconv/filter"
  input: "generator/decoder_2/deconv/filter/Adam"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_1/deconv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_1/deconv/filter"
  input: "generator/decoder_1/deconv/filter/Adam"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/mul"
  op: "Mul"
  input: "generator_train/beta1_power/read"
  input: "generator_train/Adam/beta1"
  input: "^generator_train/Adam/update_generator/decoder_1/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/Assign"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "generator_train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/Adam/mul_1"
  op: "Mul"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/beta2"
  input: "^generator_train/Adam/update_generator/decoder_1/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/Assign_1"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "generator_train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/Adam"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/Adam/Assign"
  input: "^generator_train/Adam/Assign_1"
  input: "^generator_train/Adam/update_generator/decoder_1/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_4/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_5/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_6/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_7/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_8/deconv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_7/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_8/conv/filter/ApplyAdam"
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "discriminator_loss/Mean/ExponentialMovingAverage/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/Mean/ExponentialMovingAverage/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/Mean/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_loss/Mean/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  input: "generator_loss/Mean/ExponentialMovingAverage/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/Mean/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/Mean_1/ExponentialMovingAverage/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/Mean_1/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_loss/Mean_1/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  input: "generator_loss/Mean_1/ExponentialMovingAverage/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/Mean_1/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  input: "discriminator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "generator_loss/Mean/ExponentialMovingAverage/read"
  input: "generator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1"
  op: "AssignSub"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "generator_loss/Mean_1/ExponentialMovingAverage/read"
  input: "generator_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2"
  op: "AssignSub"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage"
  op: "NoOp"
  input: "^ExponentialMovingAverage/AssignMovingAvg"
  input: "^ExponentialMovingAverage/AssignMovingAvg_1"
  input: "^ExponentialMovingAverage/AssignMovingAvg_2"
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign"
  input: "^ExponentialMovingAverage"
  input: "^generator_train/Adam"
}
node {
  name: "deprocess/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deprocess/add"
  op: "Add"
  input: "batch:1"
  input: "deprocess/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "deprocess/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "deprocess/truediv"
  op: "RealDiv"
  input: "deprocess/add"
  input: "deprocess/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "deprocess_1/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deprocess_1/add"
  op: "Add"
  input: "batch:2"
  input: "deprocess_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "deprocess_1/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "deprocess_1/truediv"
  op: "RealDiv"
  input: "deprocess_1/add"
  input: "deprocess_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "deprocess_2/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "deprocess_2/add"
  op: "Add"
  input: "generator/decoder_1/Tanh"
  input: "deprocess_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "deprocess_2/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "deprocess_2/truediv"
  op: "RealDiv"
  input: "deprocess_2/add"
  input: "deprocess_2/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/Mul"
  op: "Mul"
  input: "deprocess/truediv"
  input: "convert_inputs/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/Maximum"
  op: "Maximum"
  input: "convert_inputs/convert_image/Mul"
  input: "convert_inputs/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image/Minimum"
  op: "Minimum"
  input: "convert_inputs/convert_image/Maximum"
  input: "convert_inputs/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_inputs/convert_image"
  op: "Cast"
  input: "convert_inputs/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/Mul"
  op: "Mul"
  input: "deprocess_1/truediv"
  input: "convert_targets/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/Maximum"
  op: "Maximum"
  input: "convert_targets/convert_image/Mul"
  input: "convert_targets/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "convert_targets/convert_image/Minimum"
  op: "Minimum"
  input: "convert_targets/convert_image/Maximum"
  input: "convert_targets/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_targets/convert_image"
  op: "Cast"
  input: "convert_targets/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/Mul"
  op: "Mul"
  input: "deprocess_2/truediv"
  input: "convert_outputs/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/Maximum"
  op: "Maximum"
  input: "convert_outputs/convert_image/Mul"
  input: "convert_outputs/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image/Minimum"
  op: "Minimum"
  input: "convert_outputs/convert_image/Maximum"
  input: "convert_outputs/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_outputs/convert_image"
  op: "Cast"
  input: "convert_outputs/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/input_pngs/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/input_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/input_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/input_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/input_pngs/TensorArray"
  input: "encode_images/input_pngs/TensorArrayUnstack/range"
  input: "convert_inputs/convert_image"
  input: "encode_images/input_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convert_inputs/convert_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/input_pngs/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/input_pngs/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/input_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Enter_2"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/input_pngs/while/Enter"
  input: "encode_images/input_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/input_pngs/while/Enter_1"
  input: "encode_images/input_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Merge_2"
  op: "Merge"
  input: "encode_images/input_pngs/while/Enter_2"
  input: "encode_images/input_pngs/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less"
  op: "Less"
  input: "encode_images/input_pngs/while/Merge"
  input: "encode_images/input_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less_1/y"
  op: "Const"
  input: "^encode_images/input_pngs/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less_1"
  op: "Less"
  input: "encode_images/input_pngs/while/Merge_1"
  input: "encode_images/input_pngs/while/Less_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/LogicalAnd"
  op: "LogicalAnd"
  input: "encode_images/input_pngs/while/Less"
  input: "encode_images/input_pngs/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/input_pngs/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/input_pngs/while/Merge"
  input: "encode_images/input_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/input_pngs/while/Merge_1"
  input: "encode_images/input_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Switch_2"
  op: "Switch"
  input: "encode_images/input_pngs/while/Merge_2"
  input: "encode_images/input_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/input_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/input_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Identity_2"
  op: "Identity"
  input: "encode_images/input_pngs/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/input_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add"
  op: "Add"
  input: "encode_images/input_pngs/while/Identity"
  input: "encode_images/input_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/input_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/input_pngs/while/Identity_1"
  input: "encode_images/input_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/input_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/input_pngs/while/Identity_1"
  input: "encode_images/input_pngs/while/EncodePng"
  input: "encode_images/input_pngs/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add_1/y"
  op: "Const"
  input: "^encode_images/input_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add_1"
  op: "Add"
  input: "encode_images/input_pngs/while/Identity_1"
  input: "encode_images/input_pngs/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/input_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/input_pngs/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/NextIteration_2"
  op: "NextIteration"
  input: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/input_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/input_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Exit_2"
  op: "Exit"
  input: "encode_images/input_pngs/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/input_pngs/TensorArray_1"
  input: "encode_images/input_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/input_pngs/TensorArrayStack/range/start"
  input: "encode_images/input_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/input_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/input_pngs/TensorArray_1"
  input: "encode_images/input_pngs/TensorArrayStack/range"
  input: "encode_images/input_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/target_pngs/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/target_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/target_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/target_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/target_pngs/TensorArray"
  input: "encode_images/target_pngs/TensorArrayUnstack/range"
  input: "convert_targets/convert_image"
  input: "encode_images/target_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convert_targets/convert_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/target_pngs/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/target_pngs/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/target_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Enter_2"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/target_pngs/while/Enter"
  input: "encode_images/target_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/target_pngs/while/Enter_1"
  input: "encode_images/target_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Merge_2"
  op: "Merge"
  input: "encode_images/target_pngs/while/Enter_2"
  input: "encode_images/target_pngs/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less"
  op: "Less"
  input: "encode_images/target_pngs/while/Merge"
  input: "encode_images/target_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less_1/y"
  op: "Const"
  input: "^encode_images/target_pngs/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less_1"
  op: "Less"
  input: "encode_images/target_pngs/while/Merge_1"
  input: "encode_images/target_pngs/while/Less_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/LogicalAnd"
  op: "LogicalAnd"
  input: "encode_images/target_pngs/while/Less"
  input: "encode_images/target_pngs/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/target_pngs/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/target_pngs/while/Merge"
  input: "encode_images/target_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/target_pngs/while/Merge_1"
  input: "encode_images/target_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Switch_2"
  op: "Switch"
  input: "encode_images/target_pngs/while/Merge_2"
  input: "encode_images/target_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/target_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/target_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Identity_2"
  op: "Identity"
  input: "encode_images/target_pngs/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/target_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add"
  op: "Add"
  input: "encode_images/target_pngs/while/Identity"
  input: "encode_images/target_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/target_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/target_pngs/while/Identity_1"
  input: "encode_images/target_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/target_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/target_pngs/while/Identity_1"
  input: "encode_images/target_pngs/while/EncodePng"
  input: "encode_images/target_pngs/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add_1/y"
  op: "Const"
  input: "^encode_images/target_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add_1"
  op: "Add"
  input: "encode_images/target_pngs/while/Identity_1"
  input: "encode_images/target_pngs/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/target_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/target_pngs/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/NextIteration_2"
  op: "NextIteration"
  input: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/target_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/target_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Exit_2"
  op: "Exit"
  input: "encode_images/target_pngs/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/target_pngs/TensorArray_1"
  input: "encode_images/target_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/target_pngs/TensorArrayStack/range/start"
  input: "encode_images/target_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/target_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/target_pngs/TensorArray_1"
  input: "encode_images/target_pngs/TensorArrayStack/range"
  input: "encode_images/target_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/output_pngs/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/output_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/output_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/output_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/output_pngs/TensorArray"
  input: "encode_images/output_pngs/TensorArrayUnstack/range"
  input: "convert_outputs/convert_image"
  input: "encode_images/output_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convert_outputs/convert_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/output_pngs/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/output_pngs/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/output_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Enter_2"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/output_pngs/while/Enter"
  input: "encode_images/output_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/output_pngs/while/Enter_1"
  input: "encode_images/output_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Merge_2"
  op: "Merge"
  input: "encode_images/output_pngs/while/Enter_2"
  input: "encode_images/output_pngs/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less"
  op: "Less"
  input: "encode_images/output_pngs/while/Merge"
  input: "encode_images/output_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less_1/y"
  op: "Const"
  input: "^encode_images/output_pngs/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less_1"
  op: "Less"
  input: "encode_images/output_pngs/while/Merge_1"
  input: "encode_images/output_pngs/while/Less_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/LogicalAnd"
  op: "LogicalAnd"
  input: "encode_images/output_pngs/while/Less"
  input: "encode_images/output_pngs/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/output_pngs/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/output_pngs/while/Merge"
  input: "encode_images/output_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/output_pngs/while/Merge_1"
  input: "encode_images/output_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Switch_2"
  op: "Switch"
  input: "encode_images/output_pngs/while/Merge_2"
  input: "encode_images/output_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/output_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/output_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Identity_2"
  op: "Identity"
  input: "encode_images/output_pngs/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/output_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add"
  op: "Add"
  input: "encode_images/output_pngs/while/Identity"
  input: "encode_images/output_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/output_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/output_pngs/while/Identity_1"
  input: "encode_images/output_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/output_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/output_pngs/while/Identity_1"
  input: "encode_images/output_pngs/while/EncodePng"
  input: "encode_images/output_pngs/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/EncodePng"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add_1/y"
  op: "Const"
  input: "^encode_images/output_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add_1"
  op: "Add"
  input: "encode_images/output_pngs/while/Identity_1"
  input: "encode_images/output_pngs/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/output_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/output_pngs/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/NextIteration_2"
  op: "NextIteration"
  input: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/output_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/output_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Exit_2"
  op: "Exit"
  input: "encode_images/output_pngs/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/output_pngs/TensorArray_1"
  input: "encode_images/output_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/output_pngs/TensorArrayStack/range/start"
  input: "encode_images/output_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/output_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/output_pngs/TensorArray_1"
  input: "encode_images/output_pngs/TensorArrayStack/range"
  input: "encode_images/output_pngs/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "inputs_summary/inputs/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "inputs_summary/inputs"
      }
    }
  }
}
node {
  name: "inputs_summary/inputs"
  op: "ImageSummary"
  input: "inputs_summary/inputs/tag"
  input: "convert_inputs/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "targets_summary/targets/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "targets_summary/targets"
      }
    }
  }
}
node {
  name: "targets_summary/targets"
  op: "ImageSummary"
  input: "targets_summary/targets/tag"
  input: "convert_targets/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "outputs_summary/outputs/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "outputs_summary/outputs"
      }
    }
  }
}
node {
  name: "outputs_summary/outputs"
  op: "ImageSummary"
  input: "outputs_summary/outputs/tag"
  input: "convert_outputs/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "predict_real_summary/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "predict_real_summary/convert_image/Mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_5/Sigmoid"
  input: "predict_real_summary/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "predict_real_summary/convert_image"
  op: "Cast"
  input: "predict_real_summary/convert_image/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "predict_real_summary/predict_real/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predict_real_summary/predict_real"
      }
    }
  }
}
node {
  name: "predict_real_summary/predict_real"
  op: "ImageSummary"
  input: "predict_real_summary/predict_real/tag"
  input: "predict_real_summary/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "predict_fake_summary/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "predict_fake_summary/convert_image/Mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "predict_fake_summary/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "predict_fake_summary/convert_image"
  op: "Cast"
  input: "predict_fake_summary/convert_image/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 30
          }
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "predict_fake_summary/predict_fake/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predict_fake_summary/predict_fake"
      }
    }
  }
}
node {
  name: "predict_fake_summary/predict_fake"
  op: "ImageSummary"
  input: "predict_fake_summary/predict_fake/tag"
  input: "predict_fake_summary/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator_loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator_loss_1"
      }
    }
  }
}
node {
  name: "discriminator_loss_1"
  op: "ScalarSummary"
  input: "discriminator_loss_1/tags"
  input: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss_GAN/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator_loss_GAN"
      }
    }
  }
}
node {
  name: "generator_loss_GAN"
  op: "ScalarSummary"
  input: "generator_loss_GAN/tags"
  input: "generator_loss/Mean/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss_L1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator_loss_L1"
      }
    }
  }
}
node {
  name: "generator_loss_L1"
  op: "ScalarSummary"
  input: "generator_loss_L1/tags"
  input: "generator_loss/Mean_1/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_1/conv/filter/values/tag"
  input: "generator/encoder_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/conv/filter/values/tag"
  input: "generator/encoder_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/offset/values/tag"
  input: "generator/encoder_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/scale/values/tag"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/conv/filter/values/tag"
  input: "generator/encoder_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/offset/values/tag"
  input: "generator/encoder_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/scale/values/tag"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/conv/filter/values/tag"
  input: "generator/encoder_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/offset/values/tag"
  input: "generator/encoder_4/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/scale/values/tag"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/conv/filter/values/tag"
  input: "generator/encoder_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/offset/values/tag"
  input: "generator/encoder_5/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/scale/values/tag"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/conv/filter/values/tag"
  input: "generator/encoder_6/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/offset/values/tag"
  input: "generator/encoder_6/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/scale/values/tag"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_7/conv/filter/values/tag"
  input: "generator/encoder_7/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_7/batchnorm/offset/values/tag"
  input: "generator/encoder_7/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_7/batchnorm/scale/values/tag"
  input: "generator/encoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_8/conv/filter/values/tag"
  input: "generator/encoder_8/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_8/batchnorm/offset/values/tag"
  input: "generator/encoder_8/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_8/batchnorm/scale/values/tag"
  input: "generator/encoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_8/deconv/filter/values/tag"
  input: "generator/decoder_8/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_8/batchnorm/offset/values/tag"
  input: "generator/decoder_8/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_8/batchnorm/scale/values/tag"
  input: "generator/decoder_8/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_7/deconv/filter/values/tag"
  input: "generator/decoder_7/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_7/batchnorm/offset/values/tag"
  input: "generator/decoder_7/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_7/batchnorm/scale/values/tag"
  input: "generator/decoder_7/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_6/deconv/filter/values/tag"
  input: "generator/decoder_6/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_6/batchnorm/offset/values/tag"
  input: "generator/decoder_6/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_6/batchnorm/scale/values/tag"
  input: "generator/decoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_5/deconv/filter/values/tag"
  input: "generator/decoder_5/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_5/batchnorm/offset/values/tag"
  input: "generator/decoder_5/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_5/batchnorm/scale/values/tag"
  input: "generator/decoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_4/deconv/filter/values/tag"
  input: "generator/decoder_4/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_4/batchnorm/offset/values/tag"
  input: "generator/decoder_4/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_4/batchnorm/scale/values/tag"
  input: "generator/decoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/deconv/filter/values/tag"
  input: "generator/decoder_3/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/offset/values/tag"
  input: "generator/decoder_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/scale/values/tag"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/deconv/filter/values/tag"
  input: "generator/decoder_2/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/offset/values/tag"
  input: "generator/decoder_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/scale/values/tag"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_1/deconv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_1/deconv/filter/values/tag"
  input: "generator/decoder_1/deconv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_1/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_1/conv/filter/values/tag"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/conv/filter/values/tag"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/offset/values/tag"
  input: "discriminator/layer_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/scale/values/tag"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/conv/filter/values/tag"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/offset/values/tag"
  input: "discriminator/layer_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/scale/values/tag"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/conv/filter/values/tag"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/offset/values/tag"
  input: "discriminator/layer_4/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/scale/values/tag"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_5/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_5/conv/filter/values/tag"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_1/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_1/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_5/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_5/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_1/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_4/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_5/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_6/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_7/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_7/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_7/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_7/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_7/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_7/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_7/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_8/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_8/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder_8/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_8/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_8/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_8/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_8/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_8/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_8/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_8/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_8/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_8/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_8/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_8/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_8/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_7/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_7/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_7/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_7/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_7/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_7/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_7/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_7/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_6/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_6/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_6/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_6/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_6/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_6/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_6/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_5/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_5/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_5/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_5/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_5/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_5/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_5/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_4/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_4/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_4/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_4/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_4/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_4/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_4/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_3/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_2/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_1/deconv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_1/deconv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_1/deconv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder_1/deconv/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parameter_count/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod"
  op: "Prod"
  input: "parameter_count/Shape"
  input: "parameter_count/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_1"
  op: "Prod"
  input: "parameter_count/Shape_1"
  input: "parameter_count/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_2"
  op: "Prod"
  input: "parameter_count/Shape_2"
  input: "parameter_count/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_3"
  op: "Prod"
  input: "parameter_count/Shape_3"
  input: "parameter_count/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_4"
  op: "Prod"
  input: "parameter_count/Shape_4"
  input: "parameter_count/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_5"
  op: "Prod"
  input: "parameter_count/Shape_5"
  input: "parameter_count/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_6"
  op: "Prod"
  input: "parameter_count/Shape_6"
  input: "parameter_count/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_7"
  op: "Prod"
  input: "parameter_count/Shape_7"
  input: "parameter_count/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_8"
  op: "Prod"
  input: "parameter_count/Shape_8"
  input: "parameter_count/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_9"
  op: "Prod"
  input: "parameter_count/Shape_9"
  input: "parameter_count/Const_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_10"
  op: "Prod"
  input: "parameter_count/Shape_10"
  input: "parameter_count/Const_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_11"
  op: "Prod"
  input: "parameter_count/Shape_11"
  input: "parameter_count/Const_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_12"
  op: "Prod"
  input: "parameter_count/Shape_12"
  input: "parameter_count/Const_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_13"
  op: "Prod"
  input: "parameter_count/Shape_13"
  input: "parameter_count/Const_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_14"
  op: "Prod"
  input: "parameter_count/Shape_14"
  input: "parameter_count/Const_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_15"
  op: "Prod"
  input: "parameter_count/Shape_15"
  input: "parameter_count/Const_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_16"
  op: "Prod"
  input: "parameter_count/Shape_16"
  input: "parameter_count/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_17"
  op: "Prod"
  input: "parameter_count/Shape_17"
  input: "parameter_count/Const_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_18"
  op: "Prod"
  input: "parameter_count/Shape_18"
  input: "parameter_count/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_19"
  op: "Prod"
  input: "parameter_count/Shape_19"
  input: "parameter_count/Const_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_20"
  op: "Prod"
  input: "parameter_count/Shape_20"
  input: "parameter_count/Const_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_21"
  op: "Prod"
  input: "parameter_count/Shape_21"
  input: "parameter_count/Const_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_22"
  op: "Prod"
  input: "parameter_count/Shape_22"
  input: "parameter_count/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_23"
  op: "Prod"
  input: "parameter_count/Shape_23"
  input: "parameter_count/Const_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_24"
  op: "Prod"
  input: "parameter_count/Shape_24"
  input: "parameter_count/Const_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_25"
  op: "Prod"
  input: "parameter_count/Shape_25"
  input: "parameter_count/Const_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_26"
  op: "Prod"
  input: "parameter_count/Shape_26"
  input: "parameter_count/Const_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_27"
  op: "Prod"
  input: "parameter_count/Shape_27"
  input: "parameter_count/Const_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_28"
  op: "Prod"
  input: "parameter_count/Shape_28"
  input: "parameter_count/Const_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_29"
  op: "Prod"
  input: "parameter_count/Shape_29"
  input: "parameter_count/Const_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_30"
  op: "Prod"
  input: "parameter_count/Shape_30"
  input: "parameter_count/Const_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_31"
  op: "Prod"
  input: "parameter_count/Shape_31"
  input: "parameter_count/Const_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_32"
  op: "Prod"
  input: "parameter_count/Shape_32"
  input: "parameter_count/Const_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_33"
  op: "Prod"
  input: "parameter_count/Shape_33"
  input: "parameter_count/Const_33"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_34"
  op: "Prod"
  input: "parameter_count/Shape_34"
  input: "parameter_count/Const_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_35"
  op: "Prod"
  input: "parameter_count/Shape_35"
  input: "parameter_count/Const_35"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_36"
  op: "Prod"
  input: "parameter_count/Shape_36"
  input: "parameter_count/Const_36"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_37"
  op: "Prod"
  input: "parameter_count/Shape_37"
  input: "parameter_count/Const_37"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_38"
  op: "Prod"
  input: "parameter_count/Shape_38"
  input: "parameter_count/Const_38"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_39"
  op: "Prod"
  input: "parameter_count/Shape_39"
  input: "parameter_count/Const_39"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_40"
  op: "Prod"
  input: "parameter_count/Shape_40"
  input: "parameter_count/Const_40"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_41"
  op: "Prod"
  input: "parameter_count/Shape_41"
  input: "parameter_count/Const_41"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_42"
  op: "Prod"
  input: "parameter_count/Shape_42"
  input: "parameter_count/Const_42"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_43"
  op: "Prod"
  input: "parameter_count/Shape_43"
  input: "parameter_count/Const_43"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_44"
  op: "Prod"
  input: "parameter_count/Shape_44"
  input: "parameter_count/Const_44"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_45"
  op: "Prod"
  input: "parameter_count/Shape_45"
  input: "parameter_count/Const_45"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_46"
  op: "Prod"
  input: "parameter_count/Shape_46"
  input: "parameter_count/Const_46"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_47"
  op: "Prod"
  input: "parameter_count/Shape_47"
  input: "parameter_count/Const_47"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_48"
  op: "Prod"
  input: "parameter_count/Shape_48"
  input: "parameter_count/Const_48"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_49"
  op: "Prod"
  input: "parameter_count/Shape_49"
  input: "parameter_count/Const_49"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_50"
  op: "Prod"
  input: "parameter_count/Shape_50"
  input: "parameter_count/Const_50"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_51"
  op: "Prod"
  input: "parameter_count/Shape_51"
  input: "parameter_count/Const_51"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_52"
  op: "Prod"
  input: "parameter_count/Shape_52"
  input: "parameter_count/Const_52"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_53"
  op: "Prod"
  input: "parameter_count/Shape_53"
  input: "parameter_count/Const_53"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_54"
  op: "Prod"
  input: "parameter_count/Shape_54"
  input: "parameter_count/Const_54"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Rank/packed"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  attr {
    key: "N"
    value {
      i: 55
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 55
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range"
  op: "Range"
  input: "parameter_count/range/start"
  input: "parameter_count/Rank"
  input: "parameter_count/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parameter_count/Sum/input"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  attr {
    key: "N"
    value {
      i: 55
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 55
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Sum"
  op: "Sum"
  input: "parameter_count/Sum/input"
  input: "parameter_count/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 173
          }
        }
        string_val: "discriminator/layer_1/conv/filter"
        string_val: "discriminator/layer_1/conv/filter/Adam"
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/offset"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/scale"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_2/conv/filter"
        string_val: "discriminator/layer_2/conv/filter/Adam"
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/offset"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/scale"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_3/conv/filter"
        string_val: "discriminator/layer_3/conv/filter/Adam"
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/offset"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/scale"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_4/conv/filter"
        string_val: "discriminator/layer_4/conv/filter/Adam"
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
        string_val: "discriminator/layer_5/conv/filter"
        string_val: "discriminator/layer_5/conv/filter/Adam"
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "generator/decoder_1/deconv/filter"
        string_val: "generator/decoder_1/deconv/filter/Adam"
        string_val: "generator/decoder_1/deconv/filter/Adam_1"
        string_val: "generator/decoder_2/batchnorm/offset"
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_2/batchnorm/scale"
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_2/deconv/filter"
        string_val: "generator/decoder_2/deconv/filter/Adam"
        string_val: "generator/decoder_2/deconv/filter/Adam_1"
        string_val: "generator/decoder_3/batchnorm/offset"
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_3/batchnorm/scale"
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_3/deconv/filter"
        string_val: "generator/decoder_3/deconv/filter/Adam"
        string_val: "generator/decoder_3/deconv/filter/Adam_1"
        string_val: "generator/decoder_4/batchnorm/offset"
        string_val: "generator/decoder_4/batchnorm/offset/Adam"
        string_val: "generator/decoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_4/batchnorm/scale"
        string_val: "generator/decoder_4/batchnorm/scale/Adam"
        string_val: "generator/decoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_4/deconv/filter"
        string_val: "generator/decoder_4/deconv/filter/Adam"
        string_val: "generator/decoder_4/deconv/filter/Adam_1"
        string_val: "generator/decoder_5/batchnorm/offset"
        string_val: "generator/decoder_5/batchnorm/offset/Adam"
        string_val: "generator/decoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_5/batchnorm/scale"
        string_val: "generator/decoder_5/batchnorm/scale/Adam"
        string_val: "generator/decoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_5/deconv/filter"
        string_val: "generator/decoder_5/deconv/filter/Adam"
        string_val: "generator/decoder_5/deconv/filter/Adam_1"
        string_val: "generator/decoder_6/batchnorm/offset"
        string_val: "generator/decoder_6/batchnorm/offset/Adam"
        string_val: "generator/decoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_6/batchnorm/scale"
        string_val: "generator/decoder_6/batchnorm/scale/Adam"
        string_val: "generator/decoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_6/deconv/filter"
        string_val: "generator/decoder_6/deconv/filter/Adam"
        string_val: "generator/decoder_6/deconv/filter/Adam_1"
        string_val: "generator/decoder_7/batchnorm/offset"
        string_val: "generator/decoder_7/batchnorm/offset/Adam"
        string_val: "generator/decoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_7/batchnorm/scale"
        string_val: "generator/decoder_7/batchnorm/scale/Adam"
        string_val: "generator/decoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_7/deconv/filter"
        string_val: "generator/decoder_7/deconv/filter/Adam"
        string_val: "generator/decoder_7/deconv/filter/Adam_1"
        string_val: "generator/decoder_8/batchnorm/offset"
        string_val: "generator/decoder_8/batchnorm/offset/Adam"
        string_val: "generator/decoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_8/batchnorm/scale"
        string_val: "generator/decoder_8/batchnorm/scale/Adam"
        string_val: "generator/decoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_8/deconv/filter"
        string_val: "generator/decoder_8/deconv/filter/Adam"
        string_val: "generator/decoder_8/deconv/filter/Adam_1"
        string_val: "generator/encoder_1/conv/filter"
        string_val: "generator/encoder_1/conv/filter/Adam"
        string_val: "generator/encoder_1/conv/filter/Adam_1"
        string_val: "generator/encoder_2/batchnorm/offset"
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_2/batchnorm/scale"
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_2/conv/filter"
        string_val: "generator/encoder_2/conv/filter/Adam"
        string_val: "generator/encoder_2/conv/filter/Adam_1"
        string_val: "generator/encoder_3/batchnorm/offset"
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_3/batchnorm/scale"
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_3/conv/filter"
        string_val: "generator/encoder_3/conv/filter/Adam"
        string_val: "generator/encoder_3/conv/filter/Adam_1"
        string_val: "generator/encoder_4/batchnorm/offset"
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_4/batchnorm/scale"
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_4/conv/filter"
        string_val: "generator/encoder_4/conv/filter/Adam"
        string_val: "generator/encoder_4/conv/filter/Adam_1"
        string_val: "generator/encoder_5/batchnorm/offset"
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_5/batchnorm/scale"
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_5/conv/filter"
        string_val: "generator/encoder_5/conv/filter/Adam"
        string_val: "generator/encoder_5/conv/filter/Adam_1"
        string_val: "generator/encoder_6/batchnorm/offset"
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_6/batchnorm/scale"
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_6/conv/filter"
        string_val: "generator/encoder_6/conv/filter/Adam"
        string_val: "generator/encoder_6/conv/filter/Adam_1"
        string_val: "generator/encoder_7/batchnorm/offset"
        string_val: "generator/encoder_7/batchnorm/offset/Adam"
        string_val: "generator/encoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_7/batchnorm/scale"
        string_val: "generator/encoder_7/batchnorm/scale/Adam"
        string_val: "generator/encoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_7/conv/filter"
        string_val: "generator/encoder_7/conv/filter/Adam"
        string_val: "generator/encoder_7/conv/filter/Adam_1"
        string_val: "generator/encoder_8/batchnorm/offset"
        string_val: "generator/encoder_8/batchnorm/offset/Adam"
        string_val: "generator/encoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_8/batchnorm/scale"
        string_val: "generator/encoder_8/batchnorm/scale/Adam"
        string_val: "generator/encoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_8/conv/filter"
        string_val: "generator/encoder_8/conv/filter/Adam"
        string_val: "generator/encoder_8/conv/filter/Adam_1"
        string_val: "generator_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_loss/Mean_1/ExponentialMovingAverage"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 173
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/beta2_power"
  input: "generator/decoder_1/deconv/filter"
  input: "generator/decoder_1/deconv/filter/Adam"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator/decoder_2/deconv/filter"
  input: "generator/decoder_2/deconv/filter/Adam"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator/decoder_3/deconv/filter"
  input: "generator/decoder_3/deconv/filter/Adam"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  input: "generator/decoder_4/batchnorm/offset"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  input: "generator/decoder_4/batchnorm/scale"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  input: "generator/decoder_4/deconv/filter"
  input: "generator/decoder_4/deconv/filter/Adam"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  input: "generator/decoder_5/batchnorm/offset"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  input: "generator/decoder_5/batchnorm/scale"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  input: "generator/decoder_5/deconv/filter"
  input: "generator/decoder_5/deconv/filter/Adam"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  input: "generator/decoder_6/batchnorm/offset"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  input: "generator/decoder_6/batchnorm/scale"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  input: "generator/decoder_6/deconv/filter"
  input: "generator/decoder_6/deconv/filter/Adam"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  input: "generator/decoder_7/batchnorm/offset"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  input: "generator/decoder_7/batchnorm/scale"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  input: "generator/decoder_7/deconv/filter"
  input: "generator/decoder_7/deconv/filter/Adam"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  input: "generator/decoder_8/batchnorm/offset"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  input: "generator/decoder_8/batchnorm/scale"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  input: "generator/decoder_8/deconv/filter"
  input: "generator/decoder_8/deconv/filter/Adam"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator/encoder_3/conv/filter"
  input: "generator/encoder_3/conv/filter/Adam"
  input: "generator/encoder_3/conv/filter/Adam_1"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator/encoder_4/conv/filter"
  input: "generator/encoder_4/conv/filter/Adam"
  input: "generator/encoder_4/conv/filter/Adam_1"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator/encoder_5/conv/filter"
  input: "generator/encoder_5/conv/filter/Adam"
  input: "generator/encoder_5/conv/filter/Adam_1"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator/encoder_6/conv/filter"
  input: "generator/encoder_6/conv/filter/Adam"
  input: "generator/encoder_6/conv/filter/Adam_1"
  input: "generator/encoder_7/batchnorm/offset"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  input: "generator/encoder_7/batchnorm/scale"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  input: "generator/encoder_7/conv/filter"
  input: "generator/encoder_7/conv/filter/Adam"
  input: "generator/encoder_7/conv/filter/Adam_1"
  input: "generator/encoder_8/batchnorm/offset"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  input: "generator/encoder_8/batchnorm/scale"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  input: "generator/encoder_8/conv/filter"
  input: "generator/encoder_8/conv/filter/Adam"
  input: "generator/encoder_8/conv/filter/Adam_1"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  input: "generator_train/beta1_power"
  input: "generator_train/beta2_power"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 173
          }
        }
        string_val: "discriminator/layer_1/conv/filter"
        string_val: "discriminator/layer_1/conv/filter/Adam"
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/offset"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/scale"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_2/conv/filter"
        string_val: "discriminator/layer_2/conv/filter/Adam"
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/offset"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/scale"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_3/conv/filter"
        string_val: "discriminator/layer_3/conv/filter/Adam"
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/offset"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/scale"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_4/conv/filter"
        string_val: "discriminator/layer_4/conv/filter/Adam"
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
        string_val: "discriminator/layer_5/conv/filter"
        string_val: "discriminator/layer_5/conv/filter/Adam"
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "generator/decoder_1/deconv/filter"
        string_val: "generator/decoder_1/deconv/filter/Adam"
        string_val: "generator/decoder_1/deconv/filter/Adam_1"
        string_val: "generator/decoder_2/batchnorm/offset"
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_2/batchnorm/scale"
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_2/deconv/filter"
        string_val: "generator/decoder_2/deconv/filter/Adam"
        string_val: "generator/decoder_2/deconv/filter/Adam_1"
        string_val: "generator/decoder_3/batchnorm/offset"
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_3/batchnorm/scale"
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_3/deconv/filter"
        string_val: "generator/decoder_3/deconv/filter/Adam"
        string_val: "generator/decoder_3/deconv/filter/Adam_1"
        string_val: "generator/decoder_4/batchnorm/offset"
        string_val: "generator/decoder_4/batchnorm/offset/Adam"
        string_val: "generator/decoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_4/batchnorm/scale"
        string_val: "generator/decoder_4/batchnorm/scale/Adam"
        string_val: "generator/decoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_4/deconv/filter"
        string_val: "generator/decoder_4/deconv/filter/Adam"
        string_val: "generator/decoder_4/deconv/filter/Adam_1"
        string_val: "generator/decoder_5/batchnorm/offset"
        string_val: "generator/decoder_5/batchnorm/offset/Adam"
        string_val: "generator/decoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_5/batchnorm/scale"
        string_val: "generator/decoder_5/batchnorm/scale/Adam"
        string_val: "generator/decoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_5/deconv/filter"
        string_val: "generator/decoder_5/deconv/filter/Adam"
        string_val: "generator/decoder_5/deconv/filter/Adam_1"
        string_val: "generator/decoder_6/batchnorm/offset"
        string_val: "generator/decoder_6/batchnorm/offset/Adam"
        string_val: "generator/decoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_6/batchnorm/scale"
        string_val: "generator/decoder_6/batchnorm/scale/Adam"
        string_val: "generator/decoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_6/deconv/filter"
        string_val: "generator/decoder_6/deconv/filter/Adam"
        string_val: "generator/decoder_6/deconv/filter/Adam_1"
        string_val: "generator/decoder_7/batchnorm/offset"
        string_val: "generator/decoder_7/batchnorm/offset/Adam"
        string_val: "generator/decoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_7/batchnorm/scale"
        string_val: "generator/decoder_7/batchnorm/scale/Adam"
        string_val: "generator/decoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_7/deconv/filter"
        string_val: "generator/decoder_7/deconv/filter/Adam"
        string_val: "generator/decoder_7/deconv/filter/Adam_1"
        string_val: "generator/decoder_8/batchnorm/offset"
        string_val: "generator/decoder_8/batchnorm/offset/Adam"
        string_val: "generator/decoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_8/batchnorm/scale"
        string_val: "generator/decoder_8/batchnorm/scale/Adam"
        string_val: "generator/decoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_8/deconv/filter"
        string_val: "generator/decoder_8/deconv/filter/Adam"
        string_val: "generator/decoder_8/deconv/filter/Adam_1"
        string_val: "generator/encoder_1/conv/filter"
        string_val: "generator/encoder_1/conv/filter/Adam"
        string_val: "generator/encoder_1/conv/filter/Adam_1"
        string_val: "generator/encoder_2/batchnorm/offset"
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_2/batchnorm/scale"
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_2/conv/filter"
        string_val: "generator/encoder_2/conv/filter/Adam"
        string_val: "generator/encoder_2/conv/filter/Adam_1"
        string_val: "generator/encoder_3/batchnorm/offset"
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_3/batchnorm/scale"
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_3/conv/filter"
        string_val: "generator/encoder_3/conv/filter/Adam"
        string_val: "generator/encoder_3/conv/filter/Adam_1"
        string_val: "generator/encoder_4/batchnorm/offset"
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_4/batchnorm/scale"
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_4/conv/filter"
        string_val: "generator/encoder_4/conv/filter/Adam"
        string_val: "generator/encoder_4/conv/filter/Adam_1"
        string_val: "generator/encoder_5/batchnorm/offset"
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_5/batchnorm/scale"
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_5/conv/filter"
        string_val: "generator/encoder_5/conv/filter/Adam"
        string_val: "generator/encoder_5/conv/filter/Adam_1"
        string_val: "generator/encoder_6/batchnorm/offset"
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_6/batchnorm/scale"
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_6/conv/filter"
        string_val: "generator/encoder_6/conv/filter/Adam"
        string_val: "generator/encoder_6/conv/filter/Adam_1"
        string_val: "generator/encoder_7/batchnorm/offset"
        string_val: "generator/encoder_7/batchnorm/offset/Adam"
        string_val: "generator/encoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_7/batchnorm/scale"
        string_val: "generator/encoder_7/batchnorm/scale/Adam"
        string_val: "generator/encoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_7/conv/filter"
        string_val: "generator/encoder_7/conv/filter/Adam"
        string_val: "generator/encoder_7/conv/filter/Adam_1"
        string_val: "generator/encoder_8/batchnorm/offset"
        string_val: "generator/encoder_8/batchnorm/offset/Adam"
        string_val: "generator/encoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_8/batchnorm/scale"
        string_val: "generator/encoder_8/batchnorm/scale/Adam"
        string_val: "generator/encoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_8/conv/filter"
        string_val: "generator/encoder_8/conv/filter/Adam"
        string_val: "generator/encoder_8/conv/filter/Adam_1"
        string_val: "generator_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_loss/Mean_1/ExponentialMovingAverage"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 173
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter/Adam"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter/Adam"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter/Adam"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter/Adam"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter/Adam"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter/Adam"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "generator/encoder_1/conv/filter"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "generator/encoder_2/conv/filter"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "generator/encoder_3/conv/filter"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "generator/encoder_3/conv/filter/Adam"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "generator/encoder_3/conv/filter/Adam_1"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "generator/encoder_4/conv/filter"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "generator/encoder_4/conv/filter/Adam"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "generator/encoder_4/conv/filter/Adam_1"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "generator/encoder_5/conv/filter"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "generator/encoder_5/conv/filter/Adam"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "generator/encoder_5/conv/filter/Adam_1"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "generator/encoder_6/conv/filter"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "generator/encoder_6/conv/filter/Adam"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "generator/encoder_6/conv/filter/Adam_1"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "generator/encoder_7/conv/filter"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "generator/encoder_7/conv/filter/Adam"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "generator/encoder_7/conv/filter/Adam_1"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "generator/encoder_8/conv/filter"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "generator/encoder_8/conv/filter/Adam"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "generator/encoder_8/conv/filter/Adam_1"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/deconv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "generator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "generator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "generator/encoder_7/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "generator/encoder_8/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "generator/decoder_8/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_8/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "generator/decoder_7/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_7/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "generator/decoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "generator/decoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "generator/decoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/deconv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/deconv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/deconv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "generator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "generator_loss/Mean_1/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/Mean_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 173
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 173
          }
        }
        string_val: "generator/encoder_1/conv/filter"
        string_val: "generator/encoder_2/conv/filter"
        string_val: "generator/encoder_2/batchnorm/offset"
        string_val: "generator/encoder_2/batchnorm/scale"
        string_val: "generator/encoder_3/conv/filter"
        string_val: "generator/encoder_3/batchnorm/offset"
        string_val: "generator/encoder_3/batchnorm/scale"
        string_val: "generator/encoder_4/conv/filter"
        string_val: "generator/encoder_4/batchnorm/offset"
        string_val: "generator/encoder_4/batchnorm/scale"
        string_val: "generator/encoder_5/conv/filter"
        string_val: "generator/encoder_5/batchnorm/offset"
        string_val: "generator/encoder_5/batchnorm/scale"
        string_val: "generator/encoder_6/conv/filter"
        string_val: "generator/encoder_6/batchnorm/offset"
        string_val: "generator/encoder_6/batchnorm/scale"
        string_val: "generator/encoder_7/conv/filter"
        string_val: "generator/encoder_7/batchnorm/offset"
        string_val: "generator/encoder_7/batchnorm/scale"
        string_val: "generator/encoder_8/conv/filter"
        string_val: "generator/encoder_8/batchnorm/offset"
        string_val: "generator/encoder_8/batchnorm/scale"
        string_val: "generator/decoder_8/deconv/filter"
        string_val: "generator/decoder_8/batchnorm/offset"
        string_val: "generator/decoder_8/batchnorm/scale"
        string_val: "generator/decoder_7/deconv/filter"
        string_val: "generator/decoder_7/batchnorm/offset"
        string_val: "generator/decoder_7/batchnorm/scale"
        string_val: "generator/decoder_6/deconv/filter"
        string_val: "generator/decoder_6/batchnorm/offset"
        string_val: "generator/decoder_6/batchnorm/scale"
        string_val: "generator/decoder_5/deconv/filter"
        string_val: "generator/decoder_5/batchnorm/offset"
        string_val: "generator/decoder_5/batchnorm/scale"
        string_val: "generator/decoder_4/deconv/filter"
        string_val: "generator/decoder_4/batchnorm/offset"
        string_val: "generator/decoder_4/batchnorm/scale"
        string_val: "generator/decoder_3/deconv/filter"
        string_val: "generator/decoder_3/batchnorm/offset"
        string_val: "generator/decoder_3/batchnorm/scale"
        string_val: "generator/decoder_2/deconv/filter"
        string_val: "generator/decoder_2/batchnorm/offset"
        string_val: "generator/decoder_2/batchnorm/scale"
        string_val: "generator/decoder_1/deconv/filter"
        string_val: "discriminator/layer_1/conv/filter"
        string_val: "discriminator/layer_2/conv/filter"
        string_val: "discriminator/layer_2/batchnorm/offset"
        string_val: "discriminator/layer_2/batchnorm/scale"
        string_val: "discriminator/layer_3/conv/filter"
        string_val: "discriminator/layer_3/batchnorm/offset"
        string_val: "discriminator/layer_3/batchnorm/scale"
        string_val: "discriminator/layer_4/conv/filter"
        string_val: "discriminator/layer_4/batchnorm/offset"
        string_val: "discriminator/layer_4/batchnorm/scale"
        string_val: "discriminator/layer_5/conv/filter"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "discriminator/layer_1/conv/filter/Adam"
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/conv/filter/Adam"
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_3/conv/filter/Adam"
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_4/conv/filter/Adam"
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_5/conv/filter/Adam"
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "generator/encoder_1/conv/filter/Adam"
        string_val: "generator/encoder_1/conv/filter/Adam_1"
        string_val: "generator/encoder_2/conv/filter/Adam"
        string_val: "generator/encoder_2/conv/filter/Adam_1"
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_3/conv/filter/Adam"
        string_val: "generator/encoder_3/conv/filter/Adam_1"
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_4/conv/filter/Adam"
        string_val: "generator/encoder_4/conv/filter/Adam_1"
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_5/conv/filter/Adam"
        string_val: "generator/encoder_5/conv/filter/Adam_1"
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_6/conv/filter/Adam"
        string_val: "generator/encoder_6/conv/filter/Adam_1"
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_7/conv/filter/Adam"
        string_val: "generator/encoder_7/conv/filter/Adam_1"
        string_val: "generator/encoder_7/batchnorm/offset/Adam"
        string_val: "generator/encoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_7/batchnorm/scale/Adam"
        string_val: "generator/encoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_8/conv/filter/Adam"
        string_val: "generator/encoder_8/conv/filter/Adam_1"
        string_val: "generator/encoder_8/batchnorm/offset/Adam"
        string_val: "generator/encoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_8/batchnorm/scale/Adam"
        string_val: "generator/encoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_8/deconv/filter/Adam"
        string_val: "generator/decoder_8/deconv/filter/Adam_1"
        string_val: "generator/decoder_8/batchnorm/offset/Adam"
        string_val: "generator/decoder_8/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_8/batchnorm/scale/Adam"
        string_val: "generator/decoder_8/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_7/deconv/filter/Adam"
        string_val: "generator/decoder_7/deconv/filter/Adam_1"
        string_val: "generator/decoder_7/batchnorm/offset/Adam"
        string_val: "generator/decoder_7/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_7/batchnorm/scale/Adam"
        string_val: "generator/decoder_7/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_6/deconv/filter/Adam"
        string_val: "generator/decoder_6/deconv/filter/Adam_1"
        string_val: "generator/decoder_6/batchnorm/offset/Adam"
        string_val: "generator/decoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_6/batchnorm/scale/Adam"
        string_val: "generator/decoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_5/deconv/filter/Adam"
        string_val: "generator/decoder_5/deconv/filter/Adam_1"
        string_val: "generator/decoder_5/batchnorm/offset/Adam"
        string_val: "generator/decoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_5/batchnorm/scale/Adam"
        string_val: "generator/decoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_4/deconv/filter/Adam"
        string_val: "generator/decoder_4/deconv/filter/Adam_1"
        string_val: "generator/decoder_4/batchnorm/offset/Adam"
        string_val: "generator/decoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_4/batchnorm/scale/Adam"
        string_val: "generator/decoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_3/deconv/filter/Adam"
        string_val: "generator/decoder_3/deconv/filter/Adam_1"
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_2/deconv/filter/Adam"
        string_val: "generator/decoder_2/deconv/filter/Adam_1"
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_1/deconv/filter/Adam"
        string_val: "generator/decoder_1/deconv/filter/Adam_1"
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_loss/Mean_1/ExponentialMovingAverage"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 173
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 173
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 173
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 173
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^discriminator/layer_1/conv/filter/Adam/Assign"
  input: "^discriminator/layer_1/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_1/conv/filter/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Assign"
  input: "^discriminator/layer_2/conv/filter/Adam/Assign"
  input: "^discriminator/layer_2/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_2/conv/filter/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Assign"
  input: "^discriminator/layer_3/conv/filter/Adam/Assign"
  input: "^discriminator/layer_3/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_3/conv/filter/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Assign"
  input: "^discriminator/layer_4/conv/filter/Adam/Assign"
  input: "^discriminator/layer_4/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_4/conv/filter/Assign"
  input: "^discriminator/layer_5/conv/filter/Adam/Assign"
  input: "^discriminator/layer_5/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_5/conv/filter/Assign"
  input: "^discriminator_loss/Mean/ExponentialMovingAverage/Assign"
  input: "^discriminator_train/beta1_power/Assign"
  input: "^discriminator_train/beta2_power/Assign"
  input: "^generator/decoder_1/deconv/filter/Adam/Assign"
  input: "^generator/decoder_1/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_1/deconv/filter/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Assign"
  input: "^generator/decoder_2/deconv/filter/Adam/Assign"
  input: "^generator/decoder_2/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_2/deconv/filter/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Assign"
  input: "^generator/decoder_3/deconv/filter/Adam/Assign"
  input: "^generator/decoder_3/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_3/deconv/filter/Assign"
  input: "^generator/decoder_4/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_4/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_4/batchnorm/offset/Assign"
  input: "^generator/decoder_4/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_4/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_4/batchnorm/scale/Assign"
  input: "^generator/decoder_4/deconv/filter/Adam/Assign"
  input: "^generator/decoder_4/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_4/deconv/filter/Assign"
  input: "^generator/decoder_5/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_5/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_5/batchnorm/offset/Assign"
  input: "^generator/decoder_5/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_5/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_5/batchnorm/scale/Assign"
  input: "^generator/decoder_5/deconv/filter/Adam/Assign"
  input: "^generator/decoder_5/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_5/deconv/filter/Assign"
  input: "^generator/decoder_6/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_6/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_6/batchnorm/offset/Assign"
  input: "^generator/decoder_6/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_6/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_6/batchnorm/scale/Assign"
  input: "^generator/decoder_6/deconv/filter/Adam/Assign"
  input: "^generator/decoder_6/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_6/deconv/filter/Assign"
  input: "^generator/decoder_7/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_7/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_7/batchnorm/offset/Assign"
  input: "^generator/decoder_7/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_7/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_7/batchnorm/scale/Assign"
  input: "^generator/decoder_7/deconv/filter/Adam/Assign"
  input: "^generator/decoder_7/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_7/deconv/filter/Assign"
  input: "^generator/decoder_8/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_8/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_8/batchnorm/offset/Assign"
  input: "^generator/decoder_8/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_8/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_8/batchnorm/scale/Assign"
  input: "^generator/decoder_8/deconv/filter/Adam/Assign"
  input: "^generator/decoder_8/deconv/filter/Adam_1/Assign"
  input: "^generator/decoder_8/deconv/filter/Assign"
  input: "^generator/encoder_1/conv/filter/Adam/Assign"
  input: "^generator/encoder_1/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_1/conv/filter/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Assign"
  input: "^generator/encoder_2/conv/filter/Adam/Assign"
  input: "^generator/encoder_2/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_2/conv/filter/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Assign"
  input: "^generator/encoder_3/conv/filter/Adam/Assign"
  input: "^generator/encoder_3/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_3/conv/filter/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Assign"
  input: "^generator/encoder_4/conv/filter/Adam/Assign"
  input: "^generator/encoder_4/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_4/conv/filter/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Assign"
  input: "^generator/encoder_5/conv/filter/Adam/Assign"
  input: "^generator/encoder_5/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_5/conv/filter/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Assign"
  input: "^generator/encoder_6/conv/filter/Adam/Assign"
  input: "^generator/encoder_6/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_6/conv/filter/Assign"
  input: "^generator/encoder_7/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_7/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_7/batchnorm/offset/Assign"
  input: "^generator/encoder_7/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_7/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_7/batchnorm/scale/Assign"
  input: "^generator/encoder_7/conv/filter/Adam/Assign"
  input: "^generator/encoder_7/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_7/conv/filter/Assign"
  input: "^generator/encoder_8/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_8/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_8/batchnorm/offset/Assign"
  input: "^generator/encoder_8/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_8/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_8/batchnorm/scale/Assign"
  input: "^generator/encoder_8/conv/filter/Adam/Assign"
  input: "^generator/encoder_8/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_8/conv/filter/Assign"
  input: "^generator_loss/Mean/ExponentialMovingAverage/Assign"
  input: "^generator_loss/Mean_1/ExponentialMovingAverage/Assign"
  input: "^generator_train/beta1_power/Assign"
  input: "^generator_train/beta2_power/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "load_images/input_producer/fraction_of_32_full"
  input: "batch/fraction_of_32_full"
  input: "inputs_summary/inputs"
  input: "targets_summary/targets"
  input: "outputs_summary/outputs"
  input: "predict_real_summary/predict_real"
  input: "predict_fake_summary/predict_fake"
  input: "discriminator_loss_1"
  input: "generator_loss_GAN"
  input: "generator_loss_L1"
  input: "generator/encoder_1/conv/filter/values"
  input: "generator/encoder_2/conv/filter/values"
  input: "generator/encoder_2/batchnorm/offset/values"
  input: "generator/encoder_2/batchnorm/scale/values"
  input: "generator/encoder_3/conv/filter/values"
  input: "generator/encoder_3/batchnorm/offset/values"
  input: "generator/encoder_3/batchnorm/scale/values"
  input: "generator/encoder_4/conv/filter/values"
  input: "generator/encoder_4/batchnorm/offset/values"
  input: "generator/encoder_4/batchnorm/scale/values"
  input: "generator/encoder_5/conv/filter/values"
  input: "generator/encoder_5/batchnorm/offset/values"
  input: "generator/encoder_5/batchnorm/scale/values"
  input: "generator/encoder_6/conv/filter/values"
  input: "generator/encoder_6/batchnorm/offset/values"
  input: "generator/encoder_6/batchnorm/scale/values"
  input: "generator/encoder_7/conv/filter/values"
  input: "generator/encoder_7/batchnorm/offset/values"
  input: "generator/encoder_7/batchnorm/scale/values"
  input: "generator/encoder_8/conv/filter/values"
  input: "generator/encoder_8/batchnorm/offset/values"
  input: "generator/encoder_8/batchnorm/scale/values"
  input: "generator/decoder_8/deconv/filter/values"
  input: "generator/decoder_8/batchnorm/offset/values"
  input: "generator/decoder_8/batchnorm/scale/values"
  input: "generator/decoder_7/deconv/filter/values"
  input: "generator/decoder_7/batchnorm/offset/values"
  input: "generator/decoder_7/batchnorm/scale/values"
  input: "generator/decoder_6/deconv/filter/values"
  input: "generator/decoder_6/batchnorm/offset/values"
  input: "generator/decoder_6/batchnorm/scale/values"
  input: "generator/decoder_5/deconv/filter/values"
  input: "generator/decoder_5/batchnorm/offset/values"
  input: "generator/decoder_5/batchnorm/scale/values"
  input: "generator/decoder_4/deconv/filter/values"
  input: "generator/decoder_4/batchnorm/offset/values"
  input: "generator/decoder_4/batchnorm/scale/values"
  input: "generator/decoder_3/deconv/filter/values"
  input: "generator/decoder_3/batchnorm/offset/values"
  input: "generator/decoder_3/batchnorm/scale/values"
  input: "generator/decoder_2/deconv/filter/values"
  input: "generator/decoder_2/batchnorm/offset/values"
  input: "generator/decoder_2/batchnorm/scale/values"
  input: "generator/decoder_1/deconv/filter/values"
  input: "discriminator/layer_1/conv/filter/values"
  input: "discriminator/layer_2/conv/filter/values"
  input: "discriminator/layer_2/batchnorm/offset/values"
  input: "discriminator/layer_2/batchnorm/scale/values"
  input: "discriminator/layer_3/conv/filter/values"
  input: "discriminator/layer_3/batchnorm/offset/values"
  input: "discriminator/layer_3/batchnorm/scale/values"
  input: "discriminator/layer_4/conv/filter/values"
  input: "discriminator/layer_4/batchnorm/offset/values"
  input: "discriminator/layer_4/batchnorm/scale/values"
  input: "discriminator/layer_5/conv/filter/values"
  input: "discriminator/layer_1/conv/filter/gradients"
  input: "discriminator/layer_2/conv/filter/gradients"
  input: "discriminator/layer_2/batchnorm/offset/gradients"
  input: "discriminator/layer_2/batchnorm/scale/gradients"
  input: "discriminator/layer_3/conv/filter/gradients"
  input: "discriminator/layer_3/batchnorm/offset/gradients"
  input: "discriminator/layer_3/batchnorm/scale/gradients"
  input: "discriminator/layer_4/conv/filter/gradients"
  input: "discriminator/layer_4/batchnorm/offset/gradients"
  input: "discriminator/layer_4/batchnorm/scale/gradients"
  input: "discriminator/layer_5/conv/filter/gradients"
  input: "generator/encoder_1/conv/filter/gradients"
  input: "generator/encoder_2/conv/filter/gradients"
  input: "generator/encoder_2/batchnorm/offset/gradients"
  input: "generator/encoder_2/batchnorm/scale/gradients"
  input: "generator/encoder_3/conv/filter/gradients"
  input: "generator/encoder_3/batchnorm/offset/gradients"
  input: "generator/encoder_3/batchnorm/scale/gradients"
  input: "generator/encoder_4/conv/filter/gradients"
  input: "generator/encoder_4/batchnorm/offset/gradients"
  input: "generator/encoder_4/batchnorm/scale/gradients"
  input: "generator/encoder_5/conv/filter/gradients"
  input: "generator/encoder_5/batchnorm/offset/gradients"
  input: "generator/encoder_5/batchnorm/scale/gradients"
  input: "generator/encoder_6/conv/filter/gradients"
  input: "generator/encoder_6/batchnorm/offset/gradients"
  input: "generator/encoder_6/batchnorm/scale/gradients"
  input: "generator/encoder_7/conv/filter/gradients"
  input: "generator/encoder_7/batchnorm/offset/gradients"
  input: "generator/encoder_7/batchnorm/scale/gradients"
  input: "generator/encoder_8/conv/filter/gradients"
  input: "generator/encoder_8/batchnorm/offset/gradients"
  input: "generator/encoder_8/batchnorm/scale/gradients"
  input: "generator/decoder_8/deconv/filter/gradients"
  input: "generator/decoder_8/batchnorm/offset/gradients"
  input: "generator/decoder_8/batchnorm/scale/gradients"
  input: "generator/decoder_7/deconv/filter/gradients"
  input: "generator/decoder_7/batchnorm/offset/gradients"
  input: "generator/decoder_7/batchnorm/scale/gradients"
  input: "generator/decoder_6/deconv/filter/gradients"
  input: "generator/decoder_6/batchnorm/offset/gradients"
  input: "generator/decoder_6/batchnorm/scale/gradients"
  input: "generator/decoder_5/deconv/filter/gradients"
  input: "generator/decoder_5/batchnorm/offset/gradients"
  input: "generator/decoder_5/batchnorm/scale/gradients"
  input: "generator/decoder_4/deconv/filter/gradients"
  input: "generator/decoder_4/batchnorm/offset/gradients"
  input: "generator/decoder_4/batchnorm/scale/gradients"
  input: "generator/decoder_3/deconv/filter/gradients"
  input: "generator/decoder_3/batchnorm/offset/gradients"
  input: "generator/decoder_3/batchnorm/scale/gradients"
  input: "generator/decoder_2/deconv/filter/gradients"
  input: "generator/decoder_2/batchnorm/offset/gradients"
  input: "generator/decoder_2/batchnorm/scale/gradients"
  input: "generator/decoder_1/deconv/filter/gradients"
  attr {
    key: "N"
    value {
      i: 120
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 26
}
